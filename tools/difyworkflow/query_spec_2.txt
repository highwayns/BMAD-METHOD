目的・範囲：基本設計の対象機能/非対象、前提・制約（法規/互換/納期/予算）はどこに定義？

全体方針：アーキ式（分層/マイクロサービス/BFF）の採用理由と代替案評価は？非機能優先度との整合は？

画面/UI：画面一覧・遷移図・入力制約・バリデーション・国際化/時区間/アクセシビリティ規定は？

UX仕様：状態保持（戻る/再送防止）、フォームエラー表示、ユースケース別の操作動線は？

API/IF：API一覧（メソッド/パス/版）、入出力スキーマ、認証/認可、冪等性、レート制限、エラー設計ポリシーは？

外部連携：プロトコル/再試行/タイムアウト/スロットリング、障害時フォールバックと代替経路は？

業務フロー：主要シナリオのアクティビティ/シーケンス/状態遷移（イベント/例外/タイムアウト）定義は？

データ設計：概念/論理ER、キー/整合性/正規化方針、履歴/監査、削除（論理/物理）と復旧手順は？

PII/機微：分類・取得同意・保存期間・マスキング/暗号・第三者提供/越境可否・開示手続の規定は？

バッチ/ジョブ：スケジュール、再実行/部分再処理、遅延/失敗検知、依存関係と運用SOPは？

性能/容量：SLI/SLO（p95応答、スループット、同時数）、容量見積/成長則、DB/キャッシュ/索引指針は？

可用性/信頼性：冗長化/フェイルオーバ/ヘルスチェック、リトライ/バックオフ/CB、整合性モデルは？

セキュリティ：MFA/権限分掌、入力検証/出力エスケープ、CSRF/CORS/SSRF対策、鍵/証明書管理は？

ログ/可観測性：監査ログ項目、相関ID、メトリクス/トレース、ダッシュボードとアラート閾値は？

運用：RPO/RTO、バックアップ/演習、変更/障害/インシデント手順、当番体制と通信系統は？

エラー/例外：コード体系、ユーザ向け/内部向けメッセージ、再試行・手動復旧手順は？

設定/環境差分：dev/stg/prodの差分、Feature Flag、コンフィグの秘匿/配布/監査は？

互換/移行：データ移行手順、段階リリース/ロールバック、互換ポリシー（非推奨/破壊的変更）は？

テスト方針：単体/結合/E2E/契約/性能/カオスの範囲と合格基準、テストデータ/モック運用は？

トレーサビリティ：スペック条項→基本設計項目→REQ/NFR→受入基準の対応表はどこ？欠落は？