0. メタ：リポジトリ構成（モノレポ/複数）、主要ディレクトリとサービス境界、使用言語/FW/ビルド/IaC/CI/CDとバージョン、環境区分と設定差分、ブランチ戦略・タグ・バージョニング、直近の変更ホットスポット。
1. アーキテクチャ：サービス間依存（同期/非同期）、BFF/層分離の責務、外部連携一覧とIF形態、可用性設計（冗長/ヘルス/フェイルオーバ）、キャッシュ境界と失効、メッセージング（再試行/順序保証）、Secretsの保護、フィーチャーフラグ/AB。
2. API/契約：公開API（メソッド/パス/版）とスキーマ、入出力必須/型/バリデーション/例外、認証認可（方式/スコープ/ロール）、レート制限/タイムアウト、互換ポリシー（非推奨/破壊的変更）、エラーモデルの一貫性。
3. データ/ドメイン：主要エンティティ/主外鍵/整合性、トランザクション境界、インデックス/クエリ特性（N+1含む）、監査証跡と改ざん防止、保持/アーカイブ/削除方針、PII分類と暗号/マスキング。
4. セキュリティ：認証/認可/MFA/職務分掌、入力検証・出力エスケープ・CSRF/CORS/SSRF、防御の実装、依存脆弱性/SBOM対応、機密情報のハードコード/ログ漏洩、濫用検知とアラート。
5. 非機能（JIS X 25010）：可用性（稼働率/自己修復）、性能（p95/スループット/計測点）、信頼性（リトライ/CB）、保守性（テスト密度/循環依存/静的解析）、移植性/互換性（コンテナ/IaC）、可観測性（ログ/メトリクス/トレース/分散ID）。
6. 運用/SRE：デプロイ方式とロールバック、RPO/RTO/バックアップ、変更・インシデント管理、ジョブ/バッチ運用、クラウドコスト監視。
7. テスト/品質：単体/結合/E2E/契約テストとカバレッジ、負荷/回帰/カオス、品質ゲート（lint/sec/license）閾値、テストデータ/モック運用。
8. ライセンス/法令：OSS遵守（NOTICE/SBOM）、ログや分析での個人情報二次利用の統制。
9. リスク/スメル：神クラス/例外握り潰し/EoL依存/TODO未解消の影響。
10. ギャップ/未決：必要だが痕跡のない機能、実装はあるが仕様未整備領域、要確認質問。
11. トレーサビリティ：コミット/PR/チケットから要件の痕跡、Breaking changeと移行記録。