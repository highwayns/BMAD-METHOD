app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: workflow
  name: 詳細設計
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/voyage:0.0.5@bbd9d836cc853f699fd9e9d7d3bd85816511a674cfeeaee8055630abed6b86aa
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/openai:0.2.6@e2665624a156f52160927bceac9e169bd7e5ae6b936ae82575e14c90af390e6e
kind: app
version: 0.1.5
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: false
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: code
        targetType: llm
      id: 1728218846720-source-1728218323079-target
      selected: false
      source: '1728218846720'
      sourceHandle: source
      target: '1728218323079'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: iteration-start
        targetType: code
      id: 1728217105363start-source-1728218846720-target
      selected: false
      source: 1728217105363start
      sourceHandle: source
      target: '1728218846720'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: llm
        targetType: code
      id: 1728218323079-source-1728463823248-target
      selected: false
      source: '1728218323079'
      sourceHandle: source
      target: '1728463823248'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: iteration
        targetType: end
      id: 1728217105363-source-1728198201864-target
      source: '1728217105363'
      sourceHandle: source
      target: '1728198201864'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1728198088794-source-1728203511475-target
      source: '1728198088794'
      sourceHandle: source
      target: '1728203511475'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: code
        targetType: llm
      id: 1748675528999017486755289991-source-1748675528999017486755289990-target
      selected: false
      source: '1748675528999017486755289991'
      sourceHandle: source
      target: '1748675528999017486755289990'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: iteration-start
        targetType: code
      id: 1748675528999start-source-1748675528999017486755289991-target
      selected: false
      source: 1748675528999start
      sourceHandle: source
      target: '1748675528999017486755289991'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: llm
        targetType: code
      id: 1748675528999017486755289990-source-1748675528999017486755289992-target
      selected: false
      source: '1748675528999017486755289990'
      sourceHandle: source
      target: '1748675528999017486755289992'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: end
      id: 17486755289990-source-1728198201864-target
      source: '17486755289990'
      sourceHandle: source
      target: '1728198201864'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: code
        targetType: llm
      id: 1748683936289017486839362891-source-1748683936289017486839362890-target
      selected: false
      source: '1748683936289017486839362891'
      sourceHandle: source
      target: '1748683936289017486839362890'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: iteration-start
        targetType: code
      id: 1748683936289start-source-1748683936289017486839362891-target
      selected: false
      source: 1748683936289start
      sourceHandle: source
      target: '1748683936289017486839362891'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: llm
        targetType: code
      id: 1748683936289017486839362890-source-1748683936289017486839362892-target
      selected: false
      source: '1748683936289017486839362890'
      sourceHandle: source
      target: '1748683936289017486839362892'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: code
        targetType: llm
      id: 1748683950504017486839505051-source-1748683950504017486839505040-target
      selected: false
      source: '1748683950504017486839505051'
      sourceHandle: source
      target: '1748683950504017486839505040'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: iteration-start
        targetType: code
      id: 1748683950504start-source-1748683950504017486839505051-target
      selected: false
      source: 1748683950504start
      sourceHandle: source
      target: '1748683950504017486839505051'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: llm
        targetType: code
      id: 1748683950504017486839505040-source-1748683950504017486839505052-target
      selected: false
      source: '1748683950504017486839505040'
      sourceHandle: source
      target: '1748683950504017486839505052'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInLoop: false
        sourceType: code
        targetType: iteration
      id: 1728203511475-source-1728217105363-target
      source: '1728203511475'
      sourceHandle: source
      target: '1728217105363'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: iteration
      id: 1728203511475-source-17486755289990-target
      source: '1728203511475'
      sourceHandle: source
      target: '17486755289990'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: iteration
      id: 1728203511475-source-17486839362890-target
      source: '1728203511475'
      sourceHandle: source
      target: '17486839362890'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: iteration
      id: 1728203511475-source-17486839505040-target
      source: '1728203511475'
      sourceHandle: source
      target: '17486839505040'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: end
      id: 17486839362890-source-1728198201864-target
      source: '17486839362890'
      sourceHandle: source
      target: '1728198201864'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: end
      id: 17486839505040-source-1728198201864-target
      source: '17486839505040'
      sourceHandle: source
      target: '1728198201864'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: knowledge-retrieval
      id: 1728198077941-source-1760835551600-target
      source: '1728198077941'
      sourceHandle: source
      target: '1760835551600'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: llm
      id: 1760835551600-source-1760835568047-target
      source: '1760835551600'
      sourceHandle: source
      target: '1760835568047'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: llm
      id: 1760835568047-source-1728198088794-target
      source: '1760835568047'
      sourceHandle: source
      target: '1728198088794'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: knowledge-retrieval
      id: 1728198077941-source-1760835577519-target
      source: '1728198077941'
      sourceHandle: source
      target: '1760835577519'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: llm
      id: 1760835577519-source-1760835580695-target
      source: '1760835577519'
      sourceHandle: source
      target: '1760835580695'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: llm
      id: 1760835580695-source-1728198088794-target
      source: '1760835580695'
      sourceHandle: source
      target: '1728198088794'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: document-extractor
      id: 1728198077941-source-1760835592663-target
      source: '1728198077941'
      sourceHandle: source
      target: '1760835592663'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: document-extractor
        targetType: llm
      id: 1760835592663-source-1760835628719-target
      source: '1760835592663'
      sourceHandle: source
      target: '1760835628719'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: llm
      id: 1760835628719-source-1728198088794-target
      source: '1760835628719'
      sourceHandle: source
      target: '1728198088794'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: 👨‍💼作者：鄭軍
        selected: false
        title: 开始
        type: start
        variables:
        - label: システム名称
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: system_name
        - allowed_file_extensions: []
          allowed_file_types:
          - document
          allowed_file_upload_methods:
          - local_file
          - remote_url
          label: file
          max_length: 48
          options: []
          required: true
          type: file
          variable: file
        - allowed_file_extensions: []
          allowed_file_types:
          - image
          allowed_file_upload_methods:
          - local_file
          - remote_url
          label: query_code
          max_length: 1000
          options: []
          required: true
          type: paragraph
          variable: query_code
        - label: query_spec
          max_length: 1000
          options: []
          required: true
          type: paragraph
          variable: query_spec
      height: 195
      id: '1728198077941'
      position:
        x: -465.5233972881561
        y: 306.06079011803917
      positionAbsolute:
        x: -465.5233972881561
        y: 306.06079011803917
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: chatgpt-4o-latest
          provider: langgenius/openai/openai
        prompt_template:
        - id: fa51a950-08a7-45bf-936c-14aa386a2ec6
          role: system
          text: "あなたは日本のSI案件で詳細設計書の目次を作る上級アーキテクト/BAです。\n以下の3つの分析結果を統合し、重複・齟齬を解消して日本式の詳細設計TOCだけを出力してください。推定は**「（仮）」、未確定は「（要確認）」**を付記します。\n\
            \U0001F4E5入力\n<{{#1760835628719.text#}}>   # 参照ファイル横断分析の要約（要件/API/ER/運用/SLA/法務/議事録\
            \ 等）\n<{{#1760835568047.text#}}>  # ソースコード分析の要約（構成/UI/API/データ/非機能/運用/リスク\
            \ 等）\n<{{#1760835580695.text#}}> # スペック分析の要約（PRD/API/ER/DDL/OPS/SLA/SEC/契約\
            \ 等）\n[<CONTEXT>]      # 対象業務/システムの一言要約\n[<CONSTRAINTS>]  # 既知の前提・制約（法規/納期/予算/互換/データ越境\
            \ 等）\n[<NFR_PREFERENCES>] # 非機能優先度（例：可用性>性能>監査）\n[<STYLE_HINTS>]  # 社内標準や章立て方針（例：情報子会社標準/JIS\
            \ X 25010整合）\n\n\U0001F527統合ルール\n優先順：契約/法規 > セキュリティ/プライバシー > 可用性/性能 >\
            \ その他。\n去重・整流：同義節は統合し、用語はスペックの定義を優先。実装（コード）と文書（参照/スペック）が食い違う場合は見出し末尾に**「（仮）」**を付与。\n\
            日本式詳細設計で一般的な章立てをベースに、UI/API/データ/バッチ/可観測性/運用/SRE/エラー/設定差分を網羅。\n検証可能性：非機能節は測定式/閾値/計測点/責任境界の小節を必置。\n\
            変更容易性：互換・移行・ロールバックは独立節を確保。\n痕跡表示：各章の末尾に〔根拠タグ〕を付与可（例：〔ref:DOC-API §5 /\
            \ code:orders.ts / spec:SLA §2〕）。\n\U0001F4E4出力仕様（目次のみ）\n最大3階層：第1章/第2章…\
            \ → 1.1/1.2 → (1) (2)\n各見出しは簡潔な名詞句で。本文・説明は出力しない。\n必要に応じて見出し末尾に**〔根拠タグ〕、不確定は（要確認）**。\n\
            ✅必須章（雛形）\n文書情報（版/作成・レビュー・承認/改訂履歴）\n目的・範囲・前提／制約〔ref/spec〕\n用語・記法・命名規約（TZ/i18n含む）〔spec〕\n\
            全体構成・アーキテクチャ方針（サービス/依存/環境/境界）〔code/spec〕\n機能別 詳細設計（FUNC-###）〔ref/code/spec〕\n\
            5.1 概要と前提\n5.2 入出力・例外・状態遷移\n5.3 関連API/データ/バッチ\nAPI詳細（メソッド/パス/Version/Req-Res/認可/冪等/レート/Timeout/エラー/互換）〔ref/spec/code〕\n\
            データ詳細（DDL/制約/インデックス/履歴/削除/PII/暗号/越境）〔ref/spec〕\nシーケンス/状態遷移（同期/非同期/再試行/CB/Timeout）〔code/spec〕\n\
            バッチ/ジョブ（周期/依存/再処理/遅延・失敗SOP/監視）〔ref/spec/code〕\n設定・環境差分/Secrets/Feature\
            \ Flag（dev/stg/prod/配布/監査/ローテ）〔code/spec〕\n可観測性（監査ログ/相関ID/メトリクス/トレース/アラート閾値/ダッシュボード）〔ref/spec/code〕\n\
            セキュリティ・プライバシー（認証/認可/MFA/鍵/権限分掌/目的外利用防止）〔spec/code〕\n非機能（JIS X 25010：可用/性能/信頼性/保守性/移植性/互換/ユーザビリティ/可観測性：測定式/閾値/計測点/責任境界）〔spec〕\n\
            エラー/例外体系（分類/コード/ユーザ表示/内部記録/補償/通知）〔ref/code/spec〕\n互換・移行（データ/スキーマ/APIバージョニング/段階リリース/ロールバック）〔ref/spec〕\n\
            受入基準（対象ID×合格基準×検証方法×観測点）〔ref/spec〕\nリスク登録簿・未決事項（解決方針/期限/責任者）〔ref/code/spec〕\n\
            参照元マップ（章↔ref/code/specの対応）\n付録（テンプレ/APIスキーマ断片/ER図/用語集）［任意］\n\U0001F9FE\
            出力フォーマット（サンプル）\n第1章 文書情報\n第2章 目的・範囲・前提／制約〔ref,spec〕\n  2.1 目的（業務KGI/KPI）\n\
            \  2.2 対象/非対象\n  2.3 前提・制約（法規/越境/納期/予算）\n第3章 用語・記法〔spec〕\n第4章 全体構成・アーキテクチャ方針〔code,spec〕\n\
            第5章 機能別 詳細設計〔ref,code,spec〕\n  5.1 概要と前提\n  5.2 入出力・例外・状態遷移\n  5.3 関連API/データ/バッチ\n\
            …\n第16章 受入基準〔ref,spec〕\n第17章 リスク登録簿・未決事項〔ref,code,spec〕\n第18章 参照元マップ\n\
            付録A APIスキーマ断片 / 付録B ER図 / 付録C 用語集\n\n\U0001F39B出力パラメータ\n<DETAIL_LEVEL>[標準|精簡|拡張]\
            \   # 目次の粒度\n<NFR_PREFERENCES>[例：可用性>性能>監査]  # 第13章の小節並びに反映\n<INCLUDE_APPENDICES>[true|false]\
            \  # 付録の有無\n\n\U0001F9EAミニ入力例\n<REF_ANALYSIS>…SLA 99.9%、RPO<=5m、議事録で決済v2優先…</REF_ANALYSIS>\n\
            <CODE_ANALYSIS>…/v1/orders POST、RBAC/監査ログ、N+1懸念…</CODE_ANALYSIS>\n<SPECS_ANALYSIS>…PRD:\
            \ p95<=300ms、API非推奨化方針、PII越境禁止…</SPECS_ANALYSIS>\n<NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n\
            <DETAIL_LEVEL>標準</DETAIL_LEVEL>\n<INCLUDE_APPENDICES>true</INCLUDE_APPENDICES>\n"
        - id: 01f88599-5ae2-4978-a69b-1a13cc9b34be
          role: assistant
          text: "输出格式如下（每一章至少5-12篇内容）\n[\n  {\n    \"chapter\": \"第1章\",\n      \"\
            title\": \"xxxx\",\n      \"contents\":\n      [\n          \"1.1 xxx\"\
            ,\n          ...\n      ]\n  },\n  ...\n]"
        selected: false
        title: LLM 詳細設計目次生成
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1728198088794'
      position:
        x: 622.792701092627
        y: 144.26808902541217
      positionAbsolute:
        x: 622.792701092627
        y: 144.26808902541217
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1728198077941'
          - system_name
          variable: course_name
        - value_selector:
          - '1728217105363'
          - output
          variable: course
        - value_selector:
          - '17486755289990'
          - output
          variable: course2
        - value_selector:
          - '17486839362890'
          - output
          variable: course3
        - value_selector:
          - '17486839505040'
          - output
          variable: course4
        selected: false
        title: 结束
        type: end
      height: 193
      id: '1728198201864'
      position:
        x: 2317.5
        y: 226.5
      positionAbsolute:
        x: 2317.5
        y: 226.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(text: str) -> dict:\n    import re, json\n\n    pattern\
          \ = r\"^```json\\n([\\s\\S]*)\\n```\"\n    matched = re.match(pattern, text,\
          \ re.MULTILINE)\n    if not matched:\n        return {\"result\": \"None\"\
          }\n    jsonstr = matched.group(1)\n    obj = json.loads(jsonstr)\n    contents\
          \ = []\n    for chapter in obj:\n        for subtitle in chapter['contents']:\n\
          \            contents += [\n                {\n                    \"chapter\"\
          : chapter[\"chapter\"],\n                    \"title\": chapter[\"title\"\
          ],\n                    \"subtitle\": subtitle,\n                }\n   \
          \         ]\n    max_len = 30\n    if len(contents) > max_len:\n       \
          \ if len(contents) > max_len*2:\n            if len(contents) > max_len*3:\n\
          \                if len(contents) > max_len*4:\n                    return\
          \ {\n                        \"result_1\": contents[:max_len],\n       \
          \                 \"result_2\": contents[max_len:max_len*2],\n         \
          \               \"result_3\": contents[max_len*2:max_len*3],\n         \
          \               \"result_4\": contents[max_len*3:max_len*4]\n          \
          \          }\n                else:\n                    return {\n    \
          \                    \"result_1\": contents[:max_len],\n               \
          \         \"result_2\": contents[max_len:max_len*2],\n                 \
          \       \"result_3\": contents[max_len*2:max_len*3],\n                 \
          \       \"result_4\": contents[max_len*3:]\n                    }\n    \
          \        else:\n                return {\n                    \"result_1\"\
          : contents[:max_len],\n                    \"result_2\": contents[max_len:max_len*2],\n\
          \                    \"result_3\": contents[max_len*2:max_len*3],\n    \
          \                \"result_4\": []\n                }\n        else:\n  \
          \          return {\n                \"result_1\": contents[:max_len],\n\
          \                \"result_2\": contents[max_len:max_len*2],\n          \
          \      \"result_3\": [],\n                \"result_4\": []\n           \
          \ }\n    return {\n        \"result_1\": contents[:max_len],\n        \"\
          result_2\": [],\n        \"result_3\": [],\n        \"result_4\": []\n \
          \   }\n"
        code_language: python3
        desc: ''
        outputs:
          result_1:
            children: null
            type: array[object]
          result_2:
            children: null
            type: array[object]
          result_3:
            children: null
            type: array[object]
          result_4:
            children: null
            type: array[object]
        selected: false
        title: 转换成JSON
        type: code
        variables:
        - value_selector:
          - '1728198088794'
          - text
          variable: text
      height: 53
      id: '1728203511475'
      position:
        x: 693.5161086138039
        y: 295
      positionAbsolute:
        x: 693.5161086138039
        y: 295
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 190
        is_parallel: false
        iterator_selector:
        - '1728203511475'
        - result_1
        output_selector:
        - '1728463823248'
        - result
        output_type: array[object]
        parallel_nums: 10
        selected: false
        start_node_id: 1728217105363start
        title: 迭代生成詳細設計1
        type: iteration
        width: 1080
      height: 190
      id: '1728217105363'
      position:
        x: 1137.524862154359
        y: 226.5
      positionAbsolute:
        x: 1137.524862154359
        y: 226.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 1080
      zIndex: 1
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1728217105363start
      parentId: '1728217105363'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 1161.524862154359
        y: 294.5
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '1728217105363'
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt-4o-mini
          provider: langgenius/openai/openai
        prompt_template:
        - id: 42d3ce21-8fa0-4fe3-b28b-3c6807fe8575
          role: system
          text: "あなたは日本のSI案件で詳細設計を書く上級アーキテクト/BAです。\n以下の一節情報と根拠（要件・コード・スペック・参照ファイル）を統合し、指定された節のみの完成本文を作成してください。推測は「仮説：」と明記し、主張ごとに根拠タグを必ず付与します。\n\
            \U0001F4E5入力（この節の材料）\n<SECTION_TITLE>            # 例：第6章 API詳細 → 6.3 注文登録API\n\
            <SECTION_SCOPE>            # 本節の目的/範囲/非対象/前提・制約（箇条書き）\n<USER_REQ_SNIPPETS>\
            \        # 関連要件（REQ/NFR IDと抜粋）\n<CODE_KB_SNIPPETS>         # 関連コード（repo/path:Lx-Ly,\
            \ commit, updated）\n<SPECS_KB_SNIPPETS>        # 関連スペック（doc_id/章/項/頁）\n\
            <REF_FILES_SNIPPETS>       # 参照ファイル（file_id/章・項・頁・行）\n[<CONSTRAINTS>]\
            \            # 法規/セキュリティ/納期/予算/互換/越境 等\n[NFR_PREFERENCES]          # 非機能優先度（例：可用性>性能>監査）\n\
            [STYLE_HINTS]              # 社内テンプレ/記法/表カラム指定 等\n[OUTPUT_DEPTH]      \
            \       # 標準|詳細|要約（既定=標準）\n\n\U0001F50E実施手順（順守）\n整合チェック（事前）：<SECTION_SCOPE>を軸にREQ/Code/Spec/Refの齟齬・重複・欠落を特定（本文末に要約）。\n\
            小見出し設計：最大3階層でこの節の小見出しを先に提示（例：3.1/3.2…）。\n本文作成：各小見出しで仕様値→理由→根拠の順に簡潔に叙述。表は日本語見出し・ID付番。\n\
            例外系/運用性：エラー/再試行/タイムアウト/冪等、ログ/メトリクス/トレース/アラート、設定差分を必ず記載。\n受入基準（本節分）：合格基準×検証方法（テスト/計測/監査）×観測点を表で提示し、REQ/NFRにトレース。\n\
            リスク・未決事項：品質臭/整合不明点を表で列挙（根拠・期限・責任者）。\n根拠脚注：〔REQ-### / repo:path:Lx-Ly@commit\
            \ / DOC-xxx §y.z p.n / file:ID §項 p.〕で列挙。\n\U0001F4E4出力フォーマット（この節の本文のみ）\n\
            <SECTION_TITLE>\n\n1. 目的と範囲\n  - 目的／対象／非対象／前提・制約（要点）\n  - 関連要件：REQ/NFR\
            \ の一覧（IDのみ可）\n\n2. 設計方針（本節固有）\n  - 選定理由／代替案の比較〔根拠〕\n  - 関与NFRとの整合（測定式・閾値・計測点・責任境界）\n\
            \n3. 詳細設計\n  3.1 <小見出しA>\n     - 仕様（定量値・スキーマ・シーケンス等）\n     - 例外/エラー/リトライ/タイムアウト/冪等\n\
            \     - 運用・監視（ログ項目・メトリクス・アラート閾値）\n     - 設定/環境差分（dev/stg/prod/FF）\n  \
            \   - 〔根拠タグ〕\n  3.2 <小見出しB>\n     - （同上）\n\n4. 受入基準（本節）\n  - 表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点/データソース｜対応REQ/NFR\n\
            \n5. リスク・未決事項\n  - 表：ID｜内容｜確率/影響｜緩和策｜トリガー/期限｜責任者｜〔根拠〕\n\n6. 整合チェック（要約）\n\
            \  - 要件⇄本節、コード⇄本節、スペック/参照⇄本節の差分と是正案\n\n《根拠脚注》\n- REQ/NFR: …\n- Code: repo/path:Lx-Ly@commit（updated:\
            \ yyyy-mm-dd）\n- Spec: DOC-xxx §y.z p.n\n- Ref : file_id「…」 §項 p.\n\n\
            ✅品質ゲート（章末に結果を必ず記載）\n根拠完全性：主要主張すべてに REQ/Code/Spec/Ref のいずれか根拠を付与。\nNFR整合：関与NFRは測定式・閾値・計測点・責任境界を本文で参照。\n\
            受入網羅：この節に関わる機能/非機能へ合格基準×検証方法×観測点を紐付け。\n曖昧語排除：「迅速/十分/柔軟」などは必ず定量化。\n互換/移行：破壊的変更の有無、ロールバック/移行手順への言及。\n\
            \U0001F9EAクイックサンプル（入力→この節だけを出力）\n<SECTION_TITLE>6.3 注文登録API</SECTION_TITLE>\n\
            <SECTION_SCOPE>新規注文の登録/二重登録防止/結果通知。非対象：分析集計。</SECTION_SCOPE>\n<USER_REQ_SNIPPETS>\n\
            - REQ-012: 注文登録はp95<=300ms、冪等、二重登録不可\n- NFR-004: 稼働率99.9%、RPO<=5m、RTO<=30m\n\
            </USER_REQ_SNIPPETS>\n<CODE_KB_SNIPPETS>\n- services/order/controller.ts\
            \ L22-87@a1b2c3: POST /v1/orders (idempotency-key)\n- infra/k8s/order.yaml\
            \ L10-24: readinessProbe, resources.limits\n</CODE_KB_SNIPPETS>\n<SPECS_KB_SNIPPETS>\n\
            - DOC-API §5.1 p.12: /v1/orders POST 認証必須、v2非推奨化方針\n- DOC-SLA §2 p.3:\
            \ p95<=300ms, 99.9%\n</SPECS_KB_SNIPPETS>\n<REF_FILES_SNIPPETS>\n- MTG_2025-09-10.md\
            \ §3: リトライ時は冪等キー必須\n</REF_FILES_SNIPPETS>\n<NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n\
            <OUTPUT_DEPTH>標準</OUTPUT_DEPTH>\n"
        selected: false
        title: LLM生成基本設計1
        type: llm
        variables: []
        vision:
          configs:
            detail: high
            variable_selector:
            - '1728217105363'
            - item
          enabled: false
      height: 89
      id: '1728218323079'
      parentId: '1728217105363'
      position:
        x: 427.82204039715634
        y: 65
      positionAbsolute:
        x: 1565.3469025515153
        y: 291.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(item: object) -> dict:\n    return {\n        \"chapter\"\
          : item[\"chapter\"],\n        \"subtitle\": item[\"subtitle\"],\n      \
          \  \"title\": item[\"title\"],\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1728217105363'
        outputs:
          chapter:
            children: null
            type: string
          subtitle:
            children: null
            type: string
          title:
            children: null
            type: string
        selected: false
        title: 转object
        type: code
        variables:
        - value_selector:
          - '1728217105363'
          - item
          variable: item
      height: 53
      id: '1728218846720'
      parentId: '1728217105363'
      position:
        x: 130.46261275218922
        y: 65
      positionAbsolute:
        x: 1267.9874749065482
        y: 291.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(course: str, info: str) -> dict:\n    return {\n       \
          \ \"result\": {\n            \"info\": info,\n            \"course\": course,\n\
          \        },\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1728217105363'
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 整合
        type: code
        variables:
        - value_selector:
          - '1728218323079'
          - text
          variable: course
        - value_selector:
          - '1728217105363'
          - item
          variable: info
      height: 53
      id: '1728463823248'
      parentId: '1728217105363'
      position:
        x: 741.8919201860167
        y: 65
      positionAbsolute:
        x: 1879.4167823403757
        y: 291.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 190
        is_parallel: false
        iterator_selector:
        - '1728203511475'
        - result_2
        output_selector:
        - '1748675528999017486755289992'
        - result
        output_type: array[object]
        parallel_nums: 10
        selected: false
        start_node_id: 1748675528999start
        title: 迭代生成詳細設計2
        type: iteration
        width: 1080
      height: 190
      id: '17486755289990'
      position:
        x: 1137.524862154359
        y: 453.9895339800137
      positionAbsolute:
        x: 1137.524862154359
        y: 453.9895339800137
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 1080
      zIndex: 1
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '17486755289990'
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt-4o-mini
          provider: langgenius/openai/openai
        prompt_template:
        - id: 42d3ce21-8fa0-4fe3-b28b-3c6807fe8575
          role: system
          text: "あなたは日本のSI案件で詳細設計を書く上級アーキテクト/BAです。\n以下の一節情報と根拠（要件・コード・スペック・参照ファイル）を統合し、指定された節のみの完成本文を作成してください。推測は「仮説：」と明記し、主張ごとに根拠タグを必ず付与します。\n\
            \U0001F4E5入力（この節の材料）\n<SECTION_TITLE>            # 例：第6章 API詳細 → 6.3 注文登録API\n\
            <SECTION_SCOPE>            # 本節の目的/範囲/非対象/前提・制約（箇条書き）\n<USER_REQ_SNIPPETS>\
            \        # 関連要件（REQ/NFR IDと抜粋）\n<CODE_KB_SNIPPETS>         # 関連コード（repo/path:Lx-Ly,\
            \ commit, updated）\n<SPECS_KB_SNIPPETS>        # 関連スペック（doc_id/章/項/頁）\n\
            <REF_FILES_SNIPPETS>       # 参照ファイル（file_id/章・項・頁・行）\n[<CONSTRAINTS>]\
            \            # 法規/セキュリティ/納期/予算/互換/越境 等\n[NFR_PREFERENCES]          # 非機能優先度（例：可用性>性能>監査）\n\
            [STYLE_HINTS]              # 社内テンプレ/記法/表カラム指定 等\n[OUTPUT_DEPTH]      \
            \       # 標準|詳細|要約（既定=標準）\n\n\U0001F50E実施手順（順守）\n整合チェック（事前）：<SECTION_SCOPE>を軸にREQ/Code/Spec/Refの齟齬・重複・欠落を特定（本文末に要約）。\n\
            小見出し設計：最大3階層でこの節の小見出しを先に提示（例：3.1/3.2…）。\n本文作成：各小見出しで仕様値→理由→根拠の順に簡潔に叙述。表は日本語見出し・ID付番。\n\
            例外系/運用性：エラー/再試行/タイムアウト/冪等、ログ/メトリクス/トレース/アラート、設定差分を必ず記載。\n受入基準（本節分）：合格基準×検証方法（テスト/計測/監査）×観測点を表で提示し、REQ/NFRにトレース。\n\
            リスク・未決事項：品質臭/整合不明点を表で列挙（根拠・期限・責任者）。\n根拠脚注：〔REQ-### / repo:path:Lx-Ly@commit\
            \ / DOC-xxx §y.z p.n / file:ID §項 p.〕で列挙。\n\U0001F4E4出力フォーマット（この節の本文のみ）\n\
            <SECTION_TITLE>\n\n1. 目的と範囲\n  - 目的／対象／非対象／前提・制約（要点）\n  - 関連要件：REQ/NFR\
            \ の一覧（IDのみ可）\n\n2. 設計方針（本節固有）\n  - 選定理由／代替案の比較〔根拠〕\n  - 関与NFRとの整合（測定式・閾値・計測点・責任境界）\n\
            \n3. 詳細設計\n  3.1 <小見出しA>\n     - 仕様（定量値・スキーマ・シーケンス等）\n     - 例外/エラー/リトライ/タイムアウト/冪等\n\
            \     - 運用・監視（ログ項目・メトリクス・アラート閾値）\n     - 設定/環境差分（dev/stg/prod/FF）\n  \
            \   - 〔根拠タグ〕\n  3.2 <小見出しB>\n     - （同上）\n\n4. 受入基準（本節）\n  - 表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点/データソース｜対応REQ/NFR\n\
            \n5. リスク・未決事項\n  - 表：ID｜内容｜確率/影響｜緩和策｜トリガー/期限｜責任者｜〔根拠〕\n\n6. 整合チェック（要約）\n\
            \  - 要件⇄本節、コード⇄本節、スペック/参照⇄本節の差分と是正案\n\n《根拠脚注》\n- REQ/NFR: …\n- Code: repo/path:Lx-Ly@commit（updated:\
            \ yyyy-mm-dd）\n- Spec: DOC-xxx §y.z p.n\n- Ref : file_id「…」 §項 p.\n\n\
            ✅品質ゲート（章末に結果を必ず記載）\n根拠完全性：主要主張すべてに REQ/Code/Spec/Ref のいずれか根拠を付与。\nNFR整合：関与NFRは測定式・閾値・計測点・責任境界を本文で参照。\n\
            受入網羅：この節に関わる機能/非機能へ合格基準×検証方法×観測点を紐付け。\n曖昧語排除：「迅速/十分/柔軟」などは必ず定量化。\n互換/移行：破壊的変更の有無、ロールバック/移行手順への言及。\n\
            \U0001F9EAクイックサンプル（入力→この節だけを出力）\n<SECTION_TITLE>6.3 注文登録API</SECTION_TITLE>\n\
            <SECTION_SCOPE>新規注文の登録/二重登録防止/結果通知。非対象：分析集計。</SECTION_SCOPE>\n<USER_REQ_SNIPPETS>\n\
            - REQ-012: 注文登録はp95<=300ms、冪等、二重登録不可\n- NFR-004: 稼働率99.9%、RPO<=5m、RTO<=30m\n\
            </USER_REQ_SNIPPETS>\n<CODE_KB_SNIPPETS>\n- services/order/controller.ts\
            \ L22-87@a1b2c3: POST /v1/orders (idempotency-key)\n- infra/k8s/order.yaml\
            \ L10-24: readinessProbe, resources.limits\n</CODE_KB_SNIPPETS>\n<SPECS_KB_SNIPPETS>\n\
            - DOC-API §5.1 p.12: /v1/orders POST 認証必須、v2非推奨化方針\n- DOC-SLA §2 p.3:\
            \ p95<=300ms, 99.9%\n</SPECS_KB_SNIPPETS>\n<REF_FILES_SNIPPETS>\n- MTG_2025-09-10.md\
            \ §3: リトライ時は冪等キー必須\n</REF_FILES_SNIPPETS>\n<NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n\
            <OUTPUT_DEPTH>標準</OUTPUT_DEPTH>\n"
        selected: false
        title: LLM生生成基本設計2
        type: llm
        variables: []
        vision:
          configs:
            detail: high
            variable_selector:
            - '1728217105363'
            - item
          enabled: false
      height: 89
      id: '1748675528999017486755289990'
      parentId: '17486755289990'
      position:
        x: 430.46105621870174
        y: 65
      positionAbsolute:
        x: 1567.9859183730607
        y: 518.9895339800137
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(item: object) -> dict:\n    return {\n        \"chapter\"\
          : item[\"chapter\"],\n        \"subtitle\": item[\"subtitle\"],\n      \
          \  \"title\": item[\"title\"],\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486755289990'
        outputs:
          chapter:
            children: null
            type: string
          subtitle:
            children: null
            type: string
          title:
            children: null
            type: string
        selected: false
        title: 转OBJECT2
        type: code
        variables:
        - value_selector:
          - '17486755289990'
          - item
          variable: item
      height: 53
      id: '1748675528999017486755289991'
      parentId: '17486755289990'
      position:
        x: 130.46261275218922
        y: 65
      positionAbsolute:
        x: 1267.9874749065482
        y: 518.9895339800137
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(course: str, info: str) -> dict:\n    return {\n       \
          \ \"result\": {\n            \"info\": info,\n            \"course\": course,\n\
          \        },\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486755289990'
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 整合2
        type: code
        variables:
        - value_selector:
          - '1748675528999017486755289990'
          - text
          variable: course
        - value_selector:
          - '17486755289990'
          - item
          variable: info
      height: 53
      id: '1748675528999017486755289992'
      parentId: '17486755289990'
      position:
        x: 741.8919201860167
        y: 65
      positionAbsolute:
        x: 1879.4167823403757
        y: 518.9895339800137
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1748675528999start
      parentId: '17486755289990'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 1161.524862154359
        y: 521.9895339800137
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 190
        is_parallel: false
        iterator_selector:
        - '1728203511475'
        - result_3
        output_selector:
        - '1748683936289017486839362892'
        - result
        output_type: array[object]
        parallel_nums: 10
        selected: false
        start_node_id: 1748683936289start
        title: 迭代生成詳細設計3
        type: iteration
        width: 1080
      height: 190
      id: '17486839362890'
      position:
        x: 1137.524862154359
        y: 744.9308958564084
      positionAbsolute:
        x: 1137.524862154359
        y: 744.9308958564084
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 1080
      zIndex: 1
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '17486839362890'
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt-4o-mini
          provider: langgenius/openai/openai
        prompt_template:
        - id: 42d3ce21-8fa0-4fe3-b28b-3c6807fe8575
          role: system
          text: "あなたは日本のSI案件で詳細設計を書く上級アーキテクト/BAです。\n以下の一節情報と根拠（要件・コード・スペック・参照ファイル）を統合し、指定された節のみの完成本文を作成してください。推測は「仮説：」と明記し、主張ごとに根拠タグを必ず付与します。\n\
            \U0001F4E5入力（この節の材料）\n<SECTION_TITLE>            # 例：第6章 API詳細 → 6.3 注文登録API\n\
            <SECTION_SCOPE>            # 本節の目的/範囲/非対象/前提・制約（箇条書き）\n<USER_REQ_SNIPPETS>\
            \        # 関連要件（REQ/NFR IDと抜粋）\n<CODE_KB_SNIPPETS>         # 関連コード（repo/path:Lx-Ly,\
            \ commit, updated）\n<SPECS_KB_SNIPPETS>        # 関連スペック（doc_id/章/項/頁）\n\
            <REF_FILES_SNIPPETS>       # 参照ファイル（file_id/章・項・頁・行）\n[<CONSTRAINTS>]\
            \            # 法規/セキュリティ/納期/予算/互換/越境 等\n[NFR_PREFERENCES]          # 非機能優先度（例：可用性>性能>監査）\n\
            [STYLE_HINTS]              # 社内テンプレ/記法/表カラム指定 等\n[OUTPUT_DEPTH]      \
            \       # 標準|詳細|要約（既定=標準）\n\n\U0001F50E実施手順（順守）\n整合チェック（事前）：<SECTION_SCOPE>を軸にREQ/Code/Spec/Refの齟齬・重複・欠落を特定（本文末に要約）。\n\
            小見出し設計：最大3階層でこの節の小見出しを先に提示（例：3.1/3.2…）。\n本文作成：各小見出しで仕様値→理由→根拠の順に簡潔に叙述。表は日本語見出し・ID付番。\n\
            例外系/運用性：エラー/再試行/タイムアウト/冪等、ログ/メトリクス/トレース/アラート、設定差分を必ず記載。\n受入基準（本節分）：合格基準×検証方法（テスト/計測/監査）×観測点を表で提示し、REQ/NFRにトレース。\n\
            リスク・未決事項：品質臭/整合不明点を表で列挙（根拠・期限・責任者）。\n根拠脚注：〔REQ-### / repo:path:Lx-Ly@commit\
            \ / DOC-xxx §y.z p.n / file:ID §項 p.〕で列挙。\n\U0001F4E4出力フォーマット（この節の本文のみ）\n\
            <SECTION_TITLE>\n\n1. 目的と範囲\n  - 目的／対象／非対象／前提・制約（要点）\n  - 関連要件：REQ/NFR\
            \ の一覧（IDのみ可）\n\n2. 設計方針（本節固有）\n  - 選定理由／代替案の比較〔根拠〕\n  - 関与NFRとの整合（測定式・閾値・計測点・責任境界）\n\
            \n3. 詳細設計\n  3.1 <小見出しA>\n     - 仕様（定量値・スキーマ・シーケンス等）\n     - 例外/エラー/リトライ/タイムアウト/冪等\n\
            \     - 運用・監視（ログ項目・メトリクス・アラート閾値）\n     - 設定/環境差分（dev/stg/prod/FF）\n  \
            \   - 〔根拠タグ〕\n  3.2 <小見出しB>\n     - （同上）\n\n4. 受入基準（本節）\n  - 表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点/データソース｜対応REQ/NFR\n\
            \n5. リスク・未決事項\n  - 表：ID｜内容｜確率/影響｜緩和策｜トリガー/期限｜責任者｜〔根拠〕\n\n6. 整合チェック（要約）\n\
            \  - 要件⇄本節、コード⇄本節、スペック/参照⇄本節の差分と是正案\n\n《根拠脚注》\n- REQ/NFR: …\n- Code: repo/path:Lx-Ly@commit（updated:\
            \ yyyy-mm-dd）\n- Spec: DOC-xxx §y.z p.n\n- Ref : file_id「…」 §項 p.\n\n\
            ✅品質ゲート（章末に結果を必ず記載）\n根拠完全性：主要主張すべてに REQ/Code/Spec/Ref のいずれか根拠を付与。\nNFR整合：関与NFRは測定式・閾値・計測点・責任境界を本文で参照。\n\
            受入網羅：この節に関わる機能/非機能へ合格基準×検証方法×観測点を紐付け。\n曖昧語排除：「迅速/十分/柔軟」などは必ず定量化。\n互換/移行：破壊的変更の有無、ロールバック/移行手順への言及。\n\
            \U0001F9EAクイックサンプル（入力→この節だけを出力）\n<SECTION_TITLE>6.3 注文登録API</SECTION_TITLE>\n\
            <SECTION_SCOPE>新規注文の登録/二重登録防止/結果通知。非対象：分析集計。</SECTION_SCOPE>\n<USER_REQ_SNIPPETS>\n\
            - REQ-012: 注文登録はp95<=300ms、冪等、二重登録不可\n- NFR-004: 稼働率99.9%、RPO<=5m、RTO<=30m\n\
            </USER_REQ_SNIPPETS>\n<CODE_KB_SNIPPETS>\n- services/order/controller.ts\
            \ L22-87@a1b2c3: POST /v1/orders (idempotency-key)\n- infra/k8s/order.yaml\
            \ L10-24: readinessProbe, resources.limits\n</CODE_KB_SNIPPETS>\n<SPECS_KB_SNIPPETS>\n\
            - DOC-API §5.1 p.12: /v1/orders POST 認証必須、v2非推奨化方針\n- DOC-SLA §2 p.3:\
            \ p95<=300ms, 99.9%\n</SPECS_KB_SNIPPETS>\n<REF_FILES_SNIPPETS>\n- MTG_2025-09-10.md\
            \ §3: リトライ時は冪等キー必須\n</REF_FILES_SNIPPETS>\n<NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n\
            <OUTPUT_DEPTH>標準</OUTPUT_DEPTH>\n"
        selected: false
        title: LLM生成基本設計3
        type: llm
        variables: []
        vision:
          configs:
            detail: high
            variable_selector:
            - '1728217105363'
            - item
          enabled: false
      height: 89
      id: '1748683936289017486839362890'
      parentId: '17486839362890'
      position:
        x: 427.82204039715634
        y: 65
      positionAbsolute:
        x: 1565.3469025515153
        y: 809.9308958564084
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(item: object) -> dict:\n    return {\n        \"chapter\"\
          : item[\"chapter\"],\n        \"subtitle\": item[\"subtitle\"],\n      \
          \  \"title\": item[\"title\"],\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486839362890'
        outputs:
          chapter:
            children: null
            type: string
          subtitle:
            children: null
            type: string
          title:
            children: null
            type: string
        selected: false
        title: 转OBJECT3
        type: code
        variables:
        - value_selector:
          - '17486839362890'
          - item
          variable: item
      height: 53
      id: '1748683936289017486839362891'
      parentId: '17486839362890'
      position:
        x: 130.46261275218922
        y: 65
      positionAbsolute:
        x: 1267.9874749065482
        y: 809.9308958564084
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(course: str, info: str) -> dict:\n    return {\n       \
          \ \"result\": {\n            \"info\": info,\n            \"course\": course,\n\
          \        },\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486839362890'
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 整合3
        type: code
        variables:
        - value_selector:
          - '1748683936289017486839362890'
          - text
          variable: course
        - value_selector:
          - '17486839362890'
          - item
          variable: info
      height: 53
      id: '1748683936289017486839362892'
      parentId: '17486839362890'
      position:
        x: 740.3762036195067
        y: 65
      positionAbsolute:
        x: 1877.9010657738656
        y: 809.9308958564084
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1748683936289start
      parentId: '17486839362890'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 1161.524862154359
        y: 812.9308958564084
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 190
        is_parallel: false
        iterator_selector:
        - '1728203511475'
        - result_4
        output_selector:
        - '1748683950504017486839505052'
        - result
        output_type: array[object]
        parallel_nums: 10
        selected: false
        start_node_id: 1748683950504start
        title: 迭代生成詳細設計4
        type: iteration
        width: 1080
      height: 190
      id: '17486839505040'
      position:
        x: 1124.1371764102519
        y: 1045.2641105297362
      positionAbsolute:
        x: 1124.1371764102519
        y: 1045.2641105297362
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 1080
      zIndex: 1
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '17486839505040'
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt-4o-mini
          provider: langgenius/openai/openai
        prompt_template:
        - id: 42d3ce21-8fa0-4fe3-b28b-3c6807fe8575
          role: system
          text: "あなたは日本のSI案件で詳細設計を書く上級アーキテクト/BAです。\n以下の一節情報と根拠（要件・コード・スペック・参照ファイル）を統合し、指定された節のみの完成本文を作成してください。推測は「仮説：」と明記し、主張ごとに根拠タグを必ず付与します。\n\
            \U0001F4E5入力（この節の材料）\n<SECTION_TITLE>            # 例：第6章 API詳細 → 6.3 注文登録API\n\
            <SECTION_SCOPE>            # 本節の目的/範囲/非対象/前提・制約（箇条書き）\n<USER_REQ_SNIPPETS>\
            \        # 関連要件（REQ/NFR IDと抜粋）\n<CODE_KB_SNIPPETS>         # 関連コード（repo/path:Lx-Ly,\
            \ commit, updated）\n<SPECS_KB_SNIPPETS>        # 関連スペック（doc_id/章/項/頁）\n\
            <REF_FILES_SNIPPETS>       # 参照ファイル（file_id/章・項・頁・行）\n[<CONSTRAINTS>]\
            \            # 法規/セキュリティ/納期/予算/互換/越境 等\n[NFR_PREFERENCES]          # 非機能優先度（例：可用性>性能>監査）\n\
            [STYLE_HINTS]              # 社内テンプレ/記法/表カラム指定 等\n[OUTPUT_DEPTH]      \
            \       # 標準|詳細|要約（既定=標準）\n\n\U0001F50E実施手順（順守）\n整合チェック（事前）：<SECTION_SCOPE>を軸にREQ/Code/Spec/Refの齟齬・重複・欠落を特定（本文末に要約）。\n\
            小見出し設計：最大3階層でこの節の小見出しを先に提示（例：3.1/3.2…）。\n本文作成：各小見出しで仕様値→理由→根拠の順に簡潔に叙述。表は日本語見出し・ID付番。\n\
            例外系/運用性：エラー/再試行/タイムアウト/冪等、ログ/メトリクス/トレース/アラート、設定差分を必ず記載。\n受入基準（本節分）：合格基準×検証方法（テスト/計測/監査）×観測点を表で提示し、REQ/NFRにトレース。\n\
            リスク・未決事項：品質臭/整合不明点を表で列挙（根拠・期限・責任者）。\n根拠脚注：〔REQ-### / repo:path:Lx-Ly@commit\
            \ / DOC-xxx §y.z p.n / file:ID §項 p.〕で列挙。\n\U0001F4E4出力フォーマット（この節の本文のみ）\n\
            <SECTION_TITLE>\n\n1. 目的と範囲\n  - 目的／対象／非対象／前提・制約（要点）\n  - 関連要件：REQ/NFR\
            \ の一覧（IDのみ可）\n\n2. 設計方針（本節固有）\n  - 選定理由／代替案の比較〔根拠〕\n  - 関与NFRとの整合（測定式・閾値・計測点・責任境界）\n\
            \n3. 詳細設計\n  3.1 <小見出しA>\n     - 仕様（定量値・スキーマ・シーケンス等）\n     - 例外/エラー/リトライ/タイムアウト/冪等\n\
            \     - 運用・監視（ログ項目・メトリクス・アラート閾値）\n     - 設定/環境差分（dev/stg/prod/FF）\n  \
            \   - 〔根拠タグ〕\n  3.2 <小見出しB>\n     - （同上）\n\n4. 受入基準（本節）\n  - 表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点/データソース｜対応REQ/NFR\n\
            \n5. リスク・未決事項\n  - 表：ID｜内容｜確率/影響｜緩和策｜トリガー/期限｜責任者｜〔根拠〕\n\n6. 整合チェック（要約）\n\
            \  - 要件⇄本節、コード⇄本節、スペック/参照⇄本節の差分と是正案\n\n《根拠脚注》\n- REQ/NFR: …\n- Code: repo/path:Lx-Ly@commit（updated:\
            \ yyyy-mm-dd）\n- Spec: DOC-xxx §y.z p.n\n- Ref : file_id「…」 §項 p.\n\n\
            ✅品質ゲート（章末に結果を必ず記載）\n根拠完全性：主要主張すべてに REQ/Code/Spec/Ref のいずれか根拠を付与。\nNFR整合：関与NFRは測定式・閾値・計測点・責任境界を本文で参照。\n\
            受入網羅：この節に関わる機能/非機能へ合格基準×検証方法×観測点を紐付け。\n曖昧語排除：「迅速/十分/柔軟」などは必ず定量化。\n互換/移行：破壊的変更の有無、ロールバック/移行手順への言及。\n\
            \U0001F9EAクイックサンプル（入力→この節だけを出力）\n<SECTION_TITLE>6.3 注文登録API</SECTION_TITLE>\n\
            <SECTION_SCOPE>新規注文の登録/二重登録防止/結果通知。非対象：分析集計。</SECTION_SCOPE>\n<USER_REQ_SNIPPETS>\n\
            - REQ-012: 注文登録はp95<=300ms、冪等、二重登録不可\n- NFR-004: 稼働率99.9%、RPO<=5m、RTO<=30m\n\
            </USER_REQ_SNIPPETS>\n<CODE_KB_SNIPPETS>\n- services/order/controller.ts\
            \ L22-87@a1b2c3: POST /v1/orders (idempotency-key)\n- infra/k8s/order.yaml\
            \ L10-24: readinessProbe, resources.limits\n</CODE_KB_SNIPPETS>\n<SPECS_KB_SNIPPETS>\n\
            - DOC-API §5.1 p.12: /v1/orders POST 認証必須、v2非推奨化方針\n- DOC-SLA §2 p.3:\
            \ p95<=300ms, 99.9%\n</SPECS_KB_SNIPPETS>\n<REF_FILES_SNIPPETS>\n- MTG_2025-09-10.md\
            \ §3: リトライ時は冪等キー必須\n</REF_FILES_SNIPPETS>\n<NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n\
            <OUTPUT_DEPTH>標準</OUTPUT_DEPTH>\n"
        selected: false
        title: LLM生成基本設計4
        type: llm
        variables: []
        vision:
          configs:
            detail: high
            variable_selector:
            - '1728217105363'
            - item
          enabled: false
      height: 89
      id: '1748683950504017486839505040'
      parentId: '17486839505040'
      position:
        x: 427.82204039715634
        y: 65
      positionAbsolute:
        x: 1551.9592168074082
        y: 1110.2641105297362
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(item: object) -> dict:\n    return {\n        \"chapter\"\
          : item[\"chapter\"],\n        \"subtitle\": item[\"subtitle\"],\n      \
          \  \"title\": item[\"title\"],\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486839505040'
        outputs:
          chapter:
            children: null
            type: string
          subtitle:
            children: null
            type: string
          title:
            children: null
            type: string
        selected: false
        title: 转OBJECT4
        type: code
        variables:
        - value_selector:
          - '17486839505040'
          - item
          variable: item
      height: 53
      id: '1748683950504017486839505051'
      parentId: '17486839505040'
      position:
        x: 130.46261275218922
        y: 65
      positionAbsolute:
        x: 1254.599789162441
        y: 1110.2641105297362
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(course: str, info: str) -> dict:\n    return {\n       \
          \ \"result\": {\n            \"info\": info,\n            \"course\": course,\n\
          \        },\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486839505040'
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 整合4
        type: code
        variables:
        - value_selector:
          - '1748683950504017486839505040'
          - text
          variable: course
        - value_selector:
          - '17486839505040'
          - item
          variable: info
      height: 53
      id: '1748683950504017486839505052'
      parentId: '17486839505040'
      position:
        x: 741.8919201860167
        y: 65
      positionAbsolute:
        x: 1866.0290965962686
        y: 1110.2641105297362
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1748683950504start
      parentId: '17486839505040'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 1148.1371764102519
        y: 1113.2641105297362
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        dataset_ids: []
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          top_k: 4
        query_variable_selector:
        - '1728198077941'
        - query_code
        retrieval_mode: multiple
        selected: false
        title: 知識取得-code
        type: knowledge-retrieval
      height: 53
      id: '1760835551600'
      position:
        x: -47.49118006054857
        y: 144.26808902541217
      positionAbsolute:
        x: -47.49118006054857
        y: 144.26808902541217
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1760835551600'
          - result
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: chatgpt-4o-latest
          provider: langgenius/openai/openai
        prompt_template:
        - id: 26983b96-e632-4fc3-b609-d923d3bef43d
          role: system
          text: "あなたは日本のSI案件で詳細設計を作成する上級アーキテクト/BAです。\n以下のコードKBのみを根拠に、実装に即した詳細設計書ドラフトを作成してください。推測は必ず「仮説：」と明記し、**根拠（repo/path:lines,\
            \ commit, updated）**を主張ごとに付与します。\n\U0001F4E5入力\n<{{#context#}}>\n\n[任意パラメータ]\n\
            <CONTEXT>[対象業務/システムの一言要約]\n<CONSTRAINTS>[前提・制約（法規/セキュリティ/納期/予算/互換/越境 等）]\n\
            <NFR_PREFERENCES>[非機能の優先度：例 可用性>性能>監査]\n<ID_PREFIX>[\"FUNC\",\"API\",\"\
            DATA\",\"BATCH\",\"CFG\",\"SEQ\",\"ERR\",\"NFR\"]  # 設計ID接頭辞\n<OUTPUT_MODE>[標準|詳細|要約]\n\
            <DETECTION_LEVEL>[保守的|標準|厳格]  # 矛盾・曖昧・スメル検出の強度\n\n\U0001F50E分析タスク（順守）\n\
            モジュール特定：ユースケース⇔関数/クラス/モジュールの対応表を作成。境界（presentation/app/domain/infra）と外部依存を明記。\n\
            入出力仕様：関数/メソッドの引数型・必須/任意・デフォルト・返却型・例外を列挙（型/バリデーション根拠行付き）。\n制御フロー：主要シナリオのシーケンス（同期/非同期）、状態遷移、タイムアウト、再試行/バックオフ/サーキットブレーカ適用点を再構成。\n\
            トランザクション/整合性：Tx開始/終了/分離レベル、分散Tx（アウトボックス/サガ等）、ロック/衝突解決を明文化。\nデータ詳細設計：DDL/制約/既定値、インデックス、履歴/監査、削除（論理/物理）・復旧、PII分類/マスキング/暗号。\n\
            API詳細：メソッド/パス/バージョン、入出力DTO（型/必須/例）、認証/認可、冪等キー、レート/Timeout、エラー本文・コード規約。\n\
            バッチ/ジョブ：スケジュール・依存順序、部分再処理、遅延/失敗検知、DLQ/リトライ方針、運用SOP。\n設定/環境差分：dev/stg/prodの設定、Feature\
            \ Flag、Secretsの取得源と監査/ローテーション。\n可観測性：構造化ログ項目、相関ID、メトリクス名と単位、トレース/ダッシュボード、アラート閾値。\n\
            エラー/例外体系：分類表（ドメイン/技術/外部IF）、再試行/補償処理、ユーザ向け/内部向けメッセージ。\n非機能（JIS X 25010対応）：可用・性能・信頼性・保守性・移植性・互換・ユーザビリティ・可観測性の測定式/閾値/計測点/責任境界。\n\
            品質臭/リスク：神クラス、N+1、握り潰し例外、EoL依存、Secretsハードコード等を検出しリスク化（影響/緩和策/トリガー）。\nトレーサビリティ：repo/path:lines\
            \ → 設計ID → 受入基準 を連結。判断不能は「未確認」。\n重要：各小節の結論に根拠行を必須添付。不足は要確認質問として列挙。\n\U0001F4E4\
            出力（詳細設計ドラフト｜Markdown）\n文書情報（版/作成日/作成者/レビュー/承認）\n対象と前提・制約（横断整合）\n機能別 詳細設計\n\
            表：FUNC-ID｜名称｜対応モジュール（repo:path）｜前提/トリガー｜入力/出力（型/必須/例）｜例外/リカバリ｜根拠\nAPI詳細\n\
            表：API-ID｜目的｜メソッド/パス/Version｜Req/Res スキーマ｜認証/認可｜冪等/レート/Timeout｜エラー本文/コード｜互換（非推奨/破壊）｜根拠\n\
            データ詳細設計\n表：DATA-ID｜エンティティ｜DDL/制約｜インデックス｜履歴/監査｜削除/復旧｜PII/暗号/マスク｜根拠\nシーケンス/状態遷移（主要フローをテキスト図解、タイムアウト/再試行/CBの適用点を明示、根拠行付き）\n\
            バッチ/ジョブ\n表：BATCH-ID｜目的｜周期/窓｜依存｜再処理｜遅延/失敗SOP｜監視｜根拠\n設定・環境差分/Secrets\n表：CFG-ID｜項目｜環境(dev/stg/prod)｜配布/秘匿｜監査/ローテ｜影響範囲｜根拠\n\
            可観測性/運用ポイント\n表：OBS-ID｜ログ項目｜メトリクス/単位｜トレース｜アラート閾値/抑止条件｜ダッシュボード｜根拠\nエラー/例外体系\n\
            表：ERR-ID｜分類｜発生条件｜ユーザ表示｜内部記録｜再試行/補償｜通知先｜根拠\n非機能（NFR-###）\n表：NFR-ID｜品質特性｜測定式｜閾値｜計測点/監視｜責任境界｜根拠｜優先度\n\
            受入基準（本設計分）\n表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点/データソース｜根拠\nリスク登録簿・未決事項\n表：RISK-ID/OPEN-ID｜内容｜確率/影響｜緩和策｜トリガー/期限｜責任者｜根拠\n\
            トレーサビリティ表（repo/path:lines ↔ 設計ID ↔ 受入）\n根拠脚注（repo/path:Lx-Ly@commit（updated:\
            \ yyyy-mm-dd） を列挙）\n併出：機械可読サマリー（JSON）\n{\n  \"functions\": [],\n  \"apis\"\
            : [],\n  \"data\": [],\n  \"batches\": [],\n  \"configs\": [],\n  \"observability\"\
            : [],\n  \"errors\": [],\n  \"nfr\": [],\n  \"acceptance\": [],\n  \"\
            risks\": [],\n  \"open_questions\": [],\n  \"trace\": [{\"code_ref\":\"\
            services/x/y.ts:L20-L60@abc123\",\"design_id\":\"API-003\",\"accept\"\
            :[\"ACC-010\"]}]\n}\n\n✅品質ゲート（章末に出力）\n根拠完全性：全主張に repo/path:lines, commit,\
            \ updated が付与。\n測定可能性：全NFRに測定式/閾値/計測点/責任境界。\nAPI完全性：認証/冪等/レート/Timeout/エラー/Versionの抜け検知。\n\
            PII/法令：分類/保持/第三者提供/越境/監査の不足検知。\n受入網羅：各設計IDに合格基準×検証方法×観測点を紐付け。\nスメル→リスク化：検出スメルがリスク登録簿へ反映されているか。\n\
            \U0001F9EAミニ入力例\n<CODE_KB>\n- item: services/order/src/controller.ts\n\
            \  kind: source\n  lang: ts\n  excerpt: |\n    L22-87: POST /v1/orders\
            \ (idempotency-key) ...\n    L120-138: try{ ... } catch(e){ logger.warn('swallow')\
            \ }\n  meta: {repo: shop, branch: main, commit: a1b2c3, last_modified:\
            \ 2025-09-01}\n- item: infra/k8s/order.yaml\n  kind: infra\n  lang: yaml\n\
            \  excerpt: |\n    L10-28: readinessProbe: ...\n    L40-47: resources:\
            \ {limits: {cpu: \"500m\"}}\n</CODE_KB>\n<NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n\
            <OUTPUT_MODE>標準</OUTPUT_MODE>"
        selected: false
        title: LLM-コード分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1760835568047'
      position:
        x: 243.2358717978044
        y: 144.26808902541217
      positionAbsolute:
        x: 243.2358717978044
        y: 144.26808902541217
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - f7381d29-d338-4711-9caa-985604009c53
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: rerank-1
            provider: langgenius/voyage/voyage
          top_k: 4
        query_variable_selector:
        - '1728198077941'
        - query_spec
        retrieval_mode: multiple
        selected: false
        title: 知識取得-Spec
        type: knowledge-retrieval
      height: 91
      id: '1760835577519'
      position:
        x: -47.49118006054857
        y: 245.11672111984353
      positionAbsolute:
        x: -47.49118006054857
        y: 245.11672111984353
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1760835577519'
          - result
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: chatgpt-4o-latest
          provider: langgenius/openai/openai
        prompt_template:
        - id: bd27f1ae-f906-452a-8937-873b12475330
          role: system
          text: "あなたは日本のSI案件で詳細設計を作成する上級アーキテクト/BAです。\n以下のスペックKBだけを根拠に、矛盾・曖昧・欠落を検出しつつ、実装に直結する詳細設計書ドラフトを作成してください。推測は必ず「仮説：」と明記し、doc_id/章/項/頁で根拠を必ず付与します。\n\
            \U0001F4E5入力\n<{{#context#}}>\n\n[任意パラメータ]\n<CONTEXT>[対象業務/システムの一言要約]\n\
            <CONSTRAINTS>[法規/セキュリティ/納期/予算/互換/越境 等]\n<NFR_PREFERENCES>[非機能の優先度 例：可用性>性能>監査]\n\
            <ID_PREFIX>[\"FUNC\",\"API\",\"DATA\",\"SEQ\",\"BATCH\",\"CFG\",\"ERR\"\
            ,\"OBS\",\"NFR\"]  # 設計ID接頭辞\n<OUTPUT_MODE>[標準|詳細|要約]\n<DETECTION_LEVEL>[保守的|標準|厳格]\
            \  # 矛盾/曖昧検出の強度\n\n\U0001F50E分析タスク（順序厳守）\n版・適用範囲の整合：文書種別/版/発効日/適用環境を棚卸し。版ズレ・重複・矛盾候補を列挙。\n\
            機能分解（要求→詳細）：ユースケース/ワークフローを**FUNC-###**へ分解（前提/トリガー/入力/出力/例外/状態遷移）。\nAPI詳細：メソッド/パス/Version、Req/Res完全スキーマ（必須/型/例）、認証/認可、冪等キー、レート/Timeout、エラーモデル、互換（非推奨/破壊）を**API-###**化。\n\
            データ詳細：概念/論理ER→DDL/制約/既定値、インデックス、履歴/監査、削除（論理/物理）・復旧、PII分類/保存/マスキング/越境・第三者提供を**DATA-###**化。\n\
            シーケンス/状態：主要シナリオの同期/非同期、再試行/バックオフ/CB、タイムアウト、整合性モデル（強/最終）を**SEQ-###**で記述。\n\
            バッチ/ジョブ：スケジュール/依存/再処理/遅延・失敗SOP/監視を**BATCH-###**に整理。\n設定・環境差分/Secrets：dev/stg/prod差分、Feature\
            \ Flag、設定配布/監査/ローテを**CFG-###**化。\nエラー/例外体系：分類（ドメイン/技術/外部IF）、コード規則、ユーザ表示/内部記録、補償/ロールバックを**ERR-###**化。\n\
            可観測性/運用：監査ログ項目、相関ID、メトリクス/単位、トレース、アラート閾値・抑止条件、ダッシュボードを**OBS-###**化。\n\
            非機能（JIS X 25010）：可用/性能/信頼性/保守性/移植性/互換/ユーザビリティ/可観測性を測定式+閾値+計測点+責任境界で**NFR-###**化。\n\
            受入基準：各設計IDに合格基準×検証方法（テスト/計測/監査）×観測点を紐付け。\nギャップ・未決：仕様間の矛盾/曖昧/欠落を要確認質問とリスクに分解（期限/責任者/緩和策）。\n\
            重要：全ての主張にdoc_id/章/項/頁の根拠を付与。不明は「仮説：」で明示。\n\U0001F4E4出力（詳細設計ドラフト｜Markdown）\n\
            文書情報（版/作成日/作成者/レビュー/承認）\n対象と前提・制約（横断整合／根拠付）\n機能別 詳細設計\n表：FUNC-ID｜名称｜前提/トリガー｜入力/出力（型/必須/例）｜例外/状態遷移｜関連API/データ｜根拠\n\
            API詳細\n表：API-ID｜目的｜メソッド/パス/Version｜Req/Resスキーマ｜認証/認可｜冪等/レート/Timeout｜エラー本文/コード｜互換（非推奨/破壊）｜根拠\n\
            データ詳細設計\n表：DATA-ID｜エンティティ｜DDL/制約｜インデックス｜履歴/監査｜削除/復旧｜PII/保存/マスク/越境｜根拠\n\
            シーケンス/状態遷移（SEQ-###）（主要フローをテキスト図解。再試行/CB/Timeout適用点を明示。根拠付）\nバッチ/ジョブ（BATCH-###）\n\
            表：BATCH-ID｜目的｜周期/窓｜依存｜再処理｜遅延/失敗SOP｜監視｜根拠\n設定・環境差分/Secrets（CFG-###）\n表：CFG-ID｜項目｜環境別値｜配布/秘匿｜監査/ローテ｜影響範囲｜根拠\n\
            エラー/例外体系（ERR-###）\n表：ERR-ID｜分類｜発生条件｜ユーザ表示｜内部記録｜再試行/補償｜通知先｜根拠\n可観測性/運用（OBS-###）\n\
            表：OBS-ID｜監査ログ項目｜メトリクス/単位｜トレース｜アラート閾値｜ダッシュボード｜根拠\n非機能（NFR-###）\n表：NFR-ID｜品質特性｜測定式｜閾値｜計測点/監視｜責任境界｜根拠｜優先度\n\
            受入基準（本設計分）\n表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点/データソース｜根拠\nリスク登録簿・未決事項\n表：RISK/OPEN-ID｜内容｜確率/影響｜緩和策｜トリガー/期限｜責任者｜根拠\n\
            トレーサビリティ表（doc/章/項/頁 ↔ 設計ID ↔ 受入）\n根拠脚注（DOC-xxx §y.z p.n を列挙）\n併出：機械可読サマリー（JSON）\n\
            {\n  \"functions\": [],\n  \"apis\": [],\n  \"data\": [],\n  \"sequences\"\
            : [],\n  \"batches\": [],\n  \"configs\": [],\n  \"errors\": [],\n  \"\
            observability\": [],\n  \"nfr\": [],\n  \"acceptance\": [],\n  \"risks\"\
            : [],\n  \"open_questions\": [],\n  \"trace\": [{\"spec_ref\":\"DOC-API\
            \ §5.1 p.12\",\"design_id\":\"API-003\",\"accept\":[\"ACC-010\"]}]\n}\n\
            \n✅品質ゲート（章末に必ず出力）\n根拠完全性：全主張にdoc/章/項/頁が付与。\n測定可能性：全NFRに測定式/閾値/計測点/責任境界。\n\
            API完全性：認証/冪等/レート/Timeout/エラー/Versionの欠落検知。\nPII/法令：分類/保存/第三者提供/越境/監査の不足検知。\n\
            受入網羅：各設計IDに合格基準×検証方法×観測点が紐付く。\n版整合：相互参照文書の版/発効日の不整合警告。\n\U0001F9EAミニ入力例\n\
            <SPECS_KB>\n- doc_id: DOC-PRD v1.2 / §3 目標: p95<=300ms, CVR 8→12%\n- doc_id:\
            \ DOC-API v1.0 / §5.1 /v1/orders POST 認証必須・冪等\n- doc_id: DOC-SLA v1.0\
            \ / §2 稼働率99.9%, §3 RPO<=5m, RTO<=30m\n- doc_id: DOC-SEC v2.0 / §4 RBAC,\
            \ §6 監査ログ要件\n</SPECS_KB>\n<NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n\
            <OUTPUT_MODE>標準</OUTPUT_MODE>"
        selected: false
        title: LLMースペック分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1760835580695'
      position:
        x: 243.2358717978044
        y: 245.11672111984353
      positionAbsolute:
        x: 243.2358717978044
        y: 245.11672111984353
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_array_file: false
        selected: false
        title: テキスト抽出ツール-参照ファイル
        type: document-extractor
        variable_selector:
        - '1728198077941'
        - file
      height: 91
      id: '1760835592663'
      position:
        x: -47.49118006054857
        y: 383.5720396156082
      positionAbsolute:
        x: -47.49118006054857
        y: 383.5720396156082
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: chatgpt-4o-latest
          provider: langgenius/openai/openai
        prompt_template:
        - id: 357e1fd2-5f31-4b4c-8e1a-43c6b1e5e7c6
          role: system
          text: "あなたは日本のSI案件で詳細設計を作成する上級アーキテクト/BAです。\n以下の参照ファイルのみを根拠に、矛盾・曖昧・欠落を検出しつつ、実装可能な詳細設計書ドラフトを作成してください。推測は必ず「仮説：」と明記し、**出典（file_id/文書名/章・項・頁・行）**を主張ごとに付与します。\n\
            \U0001F4E5入力\n<{{#1760835592663.text#}}>\n\n[任意パラメータ]\n<CONTEXT>[対象業務/システムの一言要約]\n\
            <CONSTRAINTS>[法規/セキュリティ/納期/予算/互換/越境 等]\n<NFR_PREFERENCES>[非機能優先度 例：可用性>性能>監査]\n\
            <ID_PREFIX>[\"FUNC\",\"API\",\"DATA\",\"SEQ\",\"BATCH\",\"CFG\",\"ERR\"\
            ,\"OBS\",\"NFR\"]  # 設計ID接頭辞\n<OUTPUT_MODE>[標準|詳細|要約]\n<DETECTION_LEVEL>[保守的|標準|厳格]\
            \  # 矛盾/曖昧/版ズレ検出の強度\n\n\U0001F50E分析タスク（順序厳守）\nメタ整合：各ファイルの版/発効日/作成者/適用環境を棚卸し。重複・版ズレ・矛盾候補を列挙。\n\
            要求→詳細への分解：ユースケース/業務フローから**FUNC-###**を定義（前提/トリガー/入力/出力/例外/状態遷移）。\nAPI詳細：メソッド/パス/Version、Req/Res完全スキーマ（必須/型/例）、認証/認可、冪等キー、レート/Timeout、エラー本文/コード、互換（非推奨/破壊）を**API-###**化。\n\
            データ詳細：概念/論理→DDL/制約/既定値、インデックス、履歴/監査、削除（論理/物理）・復旧、PII分類/保存/マスキング/越境・第三者提供を**DATA-###**化。\n\
            シーケンス/状態：同期/非同期、再試行/バックオフ/CB、タイムアウト、整合性モデル（強/最終）を**SEQ-###**で図解テキスト化。\n\
            バッチ/ジョブ：スケジュール/依存/再処理/遅延・失敗SOP/監視を**BATCH-###**で整理。\n設定・環境差分/Secrets：dev/stg/prod差分、Feature\
            \ Flag、設定配布/監査/ローテを**CFG-###**化。\nエラー/例外体系：分類（ドメイン/技術/外部IF）、コード規約、ユーザ表示/内部記録、補償/ロールバックを**ERR-###**化。\n\
            可観測性/運用：監査ログ項目、相関ID、メトリクス/単位、トレース、アラート閾値/抑止条件、ダッシュボードを**OBS-###**化。\n\
            非機能（JIS X 25010）：可用/性能/信頼性/保守性/移植性/互換/ユーザビリティ/可観測性を測定式+閾値+計測点+責任境界で**NFR-###**化。\n\
            受入基準：各設計IDに合格基準×検証方法（テスト/計測/監査）×観測点を紐付け。\nギャップ・未決：文書間の矛盾/曖昧/欠落を要確認質問とリスクに分解（期限/責任者/緩和策）。\n\
            重要：全ての主張に file_id/章・項・頁・行の根拠を付与。不明は「仮説：」で明示。\n\U0001F4E4出力（詳細設計ドラフト｜Markdown）\n\
            文書情報（版/作成日/作成者/レビュー/承認）\n対象と前提・制約（横断整合／根拠付）\n機能別 詳細設計（FUNC-###）\n表：FUNC-ID｜名称｜前提/トリガー｜入力/出力（型/必須/例）｜例外/状態遷移｜関連API/データ｜根拠(file_id/章項頁)\n\
            API詳細（API-###）\n表：API-ID｜目的｜メソッド/パス/Version｜Req/Resスキーマ｜認証/認可｜冪等/レート/Timeout｜エラー本文/コード｜互換（非推奨/破壊）｜根拠\n\
            データ詳細設計（DATA-###）\n表：DATA-ID｜エンティティ｜DDL/制約｜インデックス｜履歴/監査｜削除/復旧｜PII/保存/マスク/越境｜根拠\n\
            シーケンス/状態遷移（SEQ-###）（主要フローをテキスト図解。再試行/CB/Timeout適用点を明示。根拠付）\nバッチ/ジョブ（BATCH-###）\n\
            表：BATCH-ID｜目的｜周期/窓｜依存｜再処理｜遅延/失敗SOP｜監視｜根拠\n設定・環境差分/Secrets（CFG-###）\n表：CFG-ID｜項目｜環境別値｜配布/秘匿｜監査/ローテ｜影響範囲｜根拠\n\
            エラー/例外体系（ERR-###）\n表：ERR-ID｜分類｜発生条件｜ユーザ表示｜内部記録｜再試行/補償｜通知先｜根拠\n可観測性/運用（OBS-###）\n\
            表：OBS-ID｜監査ログ項目｜メトリクス/単位｜トレース｜アラート閾値｜ダッシュボード｜根拠\n非機能（NFR-###）\n表：NFR-ID｜品質特性｜測定式｜閾値｜計測点/監視｜責任境界｜根拠｜優先度\n\
            受入基準（本設計分）\n表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点/データソース｜根拠\nリスク登録簿・未決事項\n表：RISK/OPEN-ID｜内容｜確率/影響｜緩和策｜トリガー/期限｜責任者｜根拠\n\
            トレーサビリティ表（file_id/章項頁 ↔ 設計ID ↔ 受入）\n根拠脚注（file_id: \"…\", 章/項/頁/行 を列挙）\n\
            併出：機械可読サマリー（JSON）\n{\n  \"functions\": [],\n  \"apis\": [],\n  \"data\"\
            : [],\n  \"sequences\": [],\n  \"batches\": [],\n  \"configs\": [],\n\
            \  \"errors\": [],\n  \"observability\": [],\n  \"nfr\": [],\n  \"acceptance\"\
            : [],\n  \"risks\": [],\n  \"open_questions\": [],\n  \"trace\": [{\"\
            spec_ref\":\"DOC-API_v1.2 §5.1 p.12\",\"design_id\":\"API-003\",\"accept\"\
            :[\"ACC-010\"]}]\n}\n\n✅品質ゲート（章末に必ず出力）\n根拠完全性：全主張に**file_id/章・項・頁（行）**が付与。\n\
            測定可能性：全NFRに測定式/閾値/計測点/責任境界。\nAPI完全性：認証/冪等/レート/Timeout/エラー/Versionの欠落検知。\n\
            PII/法令：分類/保存/第三者提供/越境/監査の不足検知。\n受入網羅：各設計IDに合格基準×検証方法×観測点を紐付け。\n版整合：相互参照の版/発効日の不整合警告。\n\
            \U0001F9EAミニ入力例\n<REFERENCE_FILES>\n- DOC-PRD_v1.2 (§3: p95<=300ms, CVR\
            \ 8→12%)\n- DOC-API_v1.0 (§5.1: /v1/orders POST 認証必須・冪等)\n- DOC-SLA_v1.0\
            \ (§2: 稼働率99.9%, §3: RPO<=5m, RTO<=30m)\n- DOC-SEC_v2.0 (§4: RBAC, §6:\
            \ 監査ログ)\n</REFERENCE_FILES>\n<NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n\
            <OUTPUT_MODE>標準</OUTPUT_MODE>"
        selected: false
        title: 参照ファイル分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1760835628719'
      position:
        x: 235.4036822793871
        y: 383.5720396156082
      positionAbsolute:
        x: 235.4036822793871
        y: 383.5720396156082
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 88.01842273814361
      y: 57.42691521386598
      zoom: 0.41387663542029596
