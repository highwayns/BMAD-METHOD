app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: workflow
  name: 基本設計
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/voyage:0.0.5@bbd9d836cc853f699fd9e9d7d3bd85816511a674cfeeaee8055630abed6b86aa
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/openai:0.2.6@e2665624a156f52160927bceac9e169bd7e5ae6b936ae82575e14c90af390e6e
kind: app
version: 0.1.5
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: false
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: code
        targetType: llm
      id: 1728218846720-source-1728218323079-target
      selected: false
      source: '1728218846720'
      sourceHandle: source
      target: '1728218323079'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: iteration-start
        targetType: code
      id: 1728217105363start-source-1728218846720-target
      selected: false
      source: 1728217105363start
      sourceHandle: source
      target: '1728218846720'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: llm
        targetType: code
      id: 1728218323079-source-1728463823248-target
      selected: false
      source: '1728218323079'
      sourceHandle: source
      target: '1728463823248'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: iteration
        targetType: end
      id: 1728217105363-source-1728198201864-target
      source: '1728217105363'
      sourceHandle: source
      target: '1728198201864'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1728198088794-source-1728203511475-target
      source: '1728198088794'
      sourceHandle: source
      target: '1728203511475'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: code
        targetType: llm
      id: 1748675528999017486755289991-source-1748675528999017486755289990-target
      selected: false
      source: '1748675528999017486755289991'
      sourceHandle: source
      target: '1748675528999017486755289990'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: iteration-start
        targetType: code
      id: 1748675528999start-source-1748675528999017486755289991-target
      selected: false
      source: 1748675528999start
      sourceHandle: source
      target: '1748675528999017486755289991'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: llm
        targetType: code
      id: 1748675528999017486755289990-source-1748675528999017486755289992-target
      selected: false
      source: '1748675528999017486755289990'
      sourceHandle: source
      target: '1748675528999017486755289992'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: end
      id: 17486755289990-source-1728198201864-target
      source: '17486755289990'
      sourceHandle: source
      target: '1728198201864'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: code
        targetType: llm
      id: 1748683936289017486839362891-source-1748683936289017486839362890-target
      selected: false
      source: '1748683936289017486839362891'
      sourceHandle: source
      target: '1748683936289017486839362890'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: iteration-start
        targetType: code
      id: 1748683936289start-source-1748683936289017486839362891-target
      selected: false
      source: 1748683936289start
      sourceHandle: source
      target: '1748683936289017486839362891'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: llm
        targetType: code
      id: 1748683936289017486839362890-source-1748683936289017486839362892-target
      selected: false
      source: '1748683936289017486839362890'
      sourceHandle: source
      target: '1748683936289017486839362892'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: code
        targetType: llm
      id: 1748683950504017486839505051-source-1748683950504017486839505040-target
      selected: false
      source: '1748683950504017486839505051'
      sourceHandle: source
      target: '1748683950504017486839505040'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: iteration-start
        targetType: code
      id: 1748683950504start-source-1748683950504017486839505051-target
      selected: false
      source: 1748683950504start
      sourceHandle: source
      target: '1748683950504017486839505051'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1728217105363'
        sourceType: llm
        targetType: code
      id: 1748683950504017486839505040-source-1748683950504017486839505052-target
      selected: false
      source: '1748683950504017486839505040'
      sourceHandle: source
      target: '1748683950504017486839505052'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInLoop: false
        sourceType: code
        targetType: iteration
      id: 1728203511475-source-1728217105363-target
      source: '1728203511475'
      sourceHandle: source
      target: '1728217105363'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: iteration
      id: 1728203511475-source-17486755289990-target
      source: '1728203511475'
      sourceHandle: source
      target: '17486755289990'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: iteration
      id: 1728203511475-source-17486839362890-target
      source: '1728203511475'
      sourceHandle: source
      target: '17486839362890'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: iteration
      id: 1728203511475-source-17486839505040-target
      source: '1728203511475'
      sourceHandle: source
      target: '17486839505040'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: end
      id: 17486839362890-source-1728198201864-target
      source: '17486839362890'
      sourceHandle: source
      target: '1728198201864'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: end
      id: 17486839505040-source-1728198201864-target
      source: '17486839505040'
      sourceHandle: source
      target: '1728198201864'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: knowledge-retrieval
      id: 1728198077941-source-1760835551600-target
      source: '1728198077941'
      sourceHandle: source
      target: '1760835551600'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: llm
      id: 1760835551600-source-1760835568047-target
      source: '1760835551600'
      sourceHandle: source
      target: '1760835568047'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: llm
      id: 1760835568047-source-1728198088794-target
      source: '1760835568047'
      sourceHandle: source
      target: '1728198088794'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: knowledge-retrieval
      id: 1728198077941-source-1760835577519-target
      source: '1728198077941'
      sourceHandle: source
      target: '1760835577519'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: llm
      id: 1760835577519-source-1760835580695-target
      source: '1760835577519'
      sourceHandle: source
      target: '1760835580695'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: llm
      id: 1760835580695-source-1728198088794-target
      source: '1760835580695'
      sourceHandle: source
      target: '1728198088794'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: document-extractor
      id: 1728198077941-source-1760835592663-target
      source: '1728198077941'
      sourceHandle: source
      target: '1760835592663'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: document-extractor
        targetType: llm
      id: 1760835592663-source-1760835628719-target
      source: '1760835592663'
      sourceHandle: source
      target: '1760835628719'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: llm
      id: 1760835628719-source-1728198088794-target
      source: '1760835628719'
      sourceHandle: source
      target: '1728198088794'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: 👨‍💼作者：鄭軍
        selected: false
        title: 开始
        type: start
        variables:
        - label: システム名称
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: system_name
        - allowed_file_extensions: []
          allowed_file_types:
          - document
          allowed_file_upload_methods:
          - local_file
          - remote_url
          label: file
          max_length: 48
          options: []
          required: true
          type: file
          variable: file
        - allowed_file_extensions: []
          allowed_file_types:
          - image
          allowed_file_upload_methods:
          - local_file
          - remote_url
          label: query_code
          max_length: 1000
          options: []
          required: true
          type: paragraph
          variable: query_code
        - label: query_spec
          max_length: 1000
          options: []
          required: true
          type: paragraph
          variable: query_spec
      height: 195
      id: '1728198077941'
      position:
        x: -465.5233972881561
        y: 306.06079011803917
      positionAbsolute:
        x: -465.5233972881561
        y: 306.06079011803917
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: chatgpt-4o-latest
          provider: langgenius/openai/openai
        prompt_template:
        - id: fa51a950-08a7-45bf-936c-14aa386a2ec6
          role: system
          text: "あなたは日本のSI案件で基本設計書の目次を作る上級アーキテクト/BAです。\n以下の３つの分析結果（ユーザ要件定義・ソースコード・スペック）を統合し、重複や齟齬を解消したうえで、日本式の基本設計の目次だけを出力してください。本文は出さず、見出し構成と章番号、必要な付録のみを提示します。推定や不確実な箇所は**「（仮）」と明記し、未決は「（要確認）」**を付記してください。\n\
            \U0001F4E5入力\n<USER_REQ_ANALYSIS>   # ユーザ要件定義の分析要約（REQ/NFR/スコープ/受入 等）\n\
            <CODE_ANALYSIS>       # ソースコード分析要約（構成/API/データ/非機能/運用/リスク 等）\n<SPECS_ANALYSIS>\
            \      # スペック（仕様/設計/運用/法務 等）分析要約\n[<CONTEXT>]           # 対象業務やシステムの一言要約\n\
            [<CONSTRAINTS>]       # 既知の前提・制約（法規/納期/予算/互換/越境 等）\n[<NFR_PREFERENCES>]\
            \   # 非機能の優先度（例：可用性>性能>監査）\n[<STYLE_HINTS>]       # 社内標準や章立て方針の希望（例：情報システム子会社標準）\n\
            \n\U0001F50E統合ルール\n優先度：法規/契約 > セキュリティ/プライバシー > 可用性/性能 > その他。\n去重・整流：重複見出しは統合、用語はスペックを優先、コード実態と要件が食い違う場合は**（仮）**を付ける。\n\
            日本式の基本設計で一般的な章立てをベースに、**対象システムの実態（UI/API/バッチ/データ/運用/SRE）**が漏れないよう調整。\n\
            監査可能性：NFRは測定/閾値/計測点/責任境界を含む節を必ず用意。\n変更容易性：将来拡張や互換方針は独立節で用意。\n痕跡：章末の「参照元マップ」に、各章の主根拠（REQ/コード/スペック）を括弧で簡記（例：〔REQ-012,\
            \ code:api/order.ts, spec:DOC-API §5〕）。\n\U0001F4E4出力仕様（“目次のみ”）\nレベルは第1章/第2章…\
            \ → 1.1/1.2 → (1) (2) の最大3階層。\n各見出しの末尾に必要に応じて〔根拠タグ〕を付与してよい（短く）。\n付録は必要なものだけ列挙（テンプレ/図表/用語集\
            \ 等）。\n✅必須章（最低限含める）\n文書情報（版/作成者/承認/改訂履歴）\n目的・範囲・前提／制約（横断整合）\n用語定義・記法（社内標準・命名規約・時区間/i18n方針）\n\
            全体構成・アーキテクチャ方針（サービス構成/依存/環境/セキュリティ境界）\n画面/UI 基本設計（一覧・遷移・入力制約・アクセシビリティ）\n\
            API/外部IF 基本設計（メソッド/パス/スキーマ/認証認可/冪等/レート/エラー/互換）\n業務フロー（シーケンス/状態遷移/例外・タイムアウト）\n\
            データ基本設計（概念/論理ER・PII分類・保持/マスキング・監査/越境）\nバッチ/ジョブ設計（スケジュール/再処理/監視/失敗SOP）\n\
            非機能（JIS X 25010整合：可用/性能/信頼性/保守性/移植性/互換/可観測性）\n運用・SRE（RPO/RTO/バックアップ・演習/デプロイ/ロールバック/変更・障害・インシデント）\n\
            セキュリティ・プライバシー（MFA/権限分掌/鍵管理/監査ログ/目的外利用防止）\n互換・移行（データ/スキーマ/APIバージョニング、段階リリース）\n\
            テスト方針（単体/結合/E2E/契約/性能/カオス、合格基準・カバレッジ）\n受入基準（対象ID×合格基準×検証方法×観測点）\nリスク登録簿・未決事項（解決方針/期限/責任者）\n\
            参照元マップ（章↔REQ/NFR↔コード↔スペックの対応表）\n付録（テンプレ・図表・APIスキーマ断片・ER図・用語集）\n\U0001F9FE\
            出力フォーマット（例）\n第1章 文書情報\n  1.1 版・作成日・作成/レビュー/承認\n第2章 目的・範囲・前提／制約〔REQ, spec〕\n\
            \  2.1 目的（業務KGI/KPI）\n  2.2 対象/非対象（スコープ）\n  2.3 前提・制約（法規/越境/納期/予算）\n第3章\
            \ 用語定義・記法〔spec〕\n第4章 全体構成・アーキテクチャ方針〔code, spec〕\n…\n第15章 受入基準〔REQ/NFR〕\n\
            第16章 リスク登録簿・未決事項〔REQ, code, spec〕\n第17章 参照元マップ（章↔REQ/NFR↔コード↔スペック）\n付録A\
            \ テンプレ一覧 / 付録B APIスキーマ断片 / 付録C ER図 / 付録D 用語集\n\n\U0001F39B出力パラメータ\n<DETAIL_LEVEL>[標準|精簡|拡張]\
            \   # 目次の粒度\n<NFR_PREFERENCES>[例：可用性>性能>監査]  # 非機能節の並び替えに反映\n<INCLUDE_APPENDICES>[true|false]\
            \  # 付録章の有無\n\n\U0001F9EAミニ入力例\n<USER_REQ_ANALYSIS>…CVR 8→12%、p95<=300ms、PII越境禁止…</USER_REQ_ANALYSIS>\n\
            <CODE_ANALYSIS>…/v1/orders POST、RBAC実装、監査ログあり、N+1懸念…</CODE_ANALYSIS>\n\
            <SPECS_ANALYSIS>…SLA 99.9%、RPO<=5m、RTO<=30m、API非推奨化ポリシ…</SPECS_ANALYSIS>\n\
            <NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n<DETAIL_LEVEL>標準</DETAIL_LEVEL>\n"
        - id: 01f88599-5ae2-4978-a69b-1a13cc9b34be
          role: assistant
          text: "输出格式如下（每一章至少5-12篇内容）\n[\n  {\n    \"chapter\": \"第1章\",\n      \"\
            title\": \"xxxx\",\n      \"contents\":\n      [\n          \"1.1 xxx\"\
            ,\n          ...\n      ]\n  },\n  ...\n]"
        selected: false
        title: LLM 基本設計目次生成
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1728198088794'
      position:
        x: 620.5805430690192
        y: 144.26808902541217
      positionAbsolute:
        x: 620.5805430690192
        y: 144.26808902541217
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1728198077941'
          - system_name
          variable: course_name
        - value_selector:
          - '1728217105363'
          - output
          variable: course
        - value_selector:
          - '17486755289990'
          - output
          variable: course2
        - value_selector:
          - '17486839362890'
          - output
          variable: course3
        - value_selector:
          - '17486839505040'
          - output
          variable: course4
        selected: false
        title: 结束
        type: end
      height: 193
      id: '1728198201864'
      position:
        x: 2317.5
        y: 226.5
      positionAbsolute:
        x: 2317.5
        y: 226.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(text: str) -> dict:\n    import re, json\n\n    pattern\
          \ = r\"^```json\\n([\\s\\S]*)\\n```\"\n    matched = re.match(pattern, text,\
          \ re.MULTILINE)\n    if not matched:\n        return {\"result\": \"None\"\
          }\n    jsonstr = matched.group(1)\n    obj = json.loads(jsonstr)\n    contents\
          \ = []\n    for chapter in obj:\n        for subtitle in chapter['contents']:\n\
          \            contents += [\n                {\n                    \"chapter\"\
          : chapter[\"chapter\"],\n                    \"title\": chapter[\"title\"\
          ],\n                    \"subtitle\": subtitle,\n                }\n   \
          \         ]\n    max_len = 30\n    if len(contents) > max_len:\n       \
          \ if len(contents) > max_len*2:\n            if len(contents) > max_len*3:\n\
          \                if len(contents) > max_len*4:\n                    return\
          \ {\n                        \"result_1\": contents[:max_len],\n       \
          \                 \"result_2\": contents[max_len:max_len*2],\n         \
          \               \"result_3\": contents[max_len*2:max_len*3],\n         \
          \               \"result_4\": contents[max_len*3:max_len*4]\n          \
          \          }\n                else:\n                    return {\n    \
          \                    \"result_1\": contents[:max_len],\n               \
          \         \"result_2\": contents[max_len:max_len*2],\n                 \
          \       \"result_3\": contents[max_len*2:max_len*3],\n                 \
          \       \"result_4\": contents[max_len*3:]\n                    }\n    \
          \        else:\n                return {\n                    \"result_1\"\
          : contents[:max_len],\n                    \"result_2\": contents[max_len:max_len*2],\n\
          \                    \"result_3\": contents[max_len*2:max_len*3],\n    \
          \                \"result_4\": []\n                }\n        else:\n  \
          \          return {\n                \"result_1\": contents[:max_len],\n\
          \                \"result_2\": contents[max_len:max_len*2],\n          \
          \      \"result_3\": [],\n                \"result_4\": []\n           \
          \ }\n    return {\n        \"result_1\": contents[:max_len],\n        \"\
          result_2\": [],\n        \"result_3\": [],\n        \"result_4\": []\n \
          \   }\n"
        code_language: python3
        desc: ''
        outputs:
          result_1:
            children: null
            type: array[object]
          result_2:
            children: null
            type: array[object]
          result_3:
            children: null
            type: array[object]
          result_4:
            children: null
            type: array[object]
        selected: false
        title: 转换成JSON
        type: code
        variables:
        - value_selector:
          - '1728198088794'
          - text
          variable: text
      height: 53
      id: '1728203511475'
      position:
        x: 693.5161086138039
        y: 295
      positionAbsolute:
        x: 693.5161086138039
        y: 295
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 190
        is_parallel: false
        iterator_selector:
        - '1728203511475'
        - result_1
        output_selector:
        - '1728463823248'
        - result
        output_type: array[object]
        parallel_nums: 10
        selected: false
        start_node_id: 1728217105363start
        title: 迭代生成基本設計1
        type: iteration
        width: 1080
      height: 190
      id: '1728217105363'
      position:
        x: 1137.524862154359
        y: 226.5
      positionAbsolute:
        x: 1137.524862154359
        y: 226.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 1080
      zIndex: 1
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1728217105363start
      parentId: '1728217105363'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 1161.524862154359
        y: 294.5
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '1728217105363'
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt-4o-mini
          provider: langgenius/openai/openai
        prompt_template:
        - id: 42d3ce21-8fa0-4fe3-b28b-3c6807fe8575
          role: system
          text: "あなたは日本のSI案件で基本設計を作成する上級アーキテクト/BAです。\n以下の一節情報と根拠（要件・コード・スペック）を統合し、指定の節（章/節）だけの完成本文を作成してください。推測は必ず「仮説：」と明記し、根拠タグを脚注に必ず付与します。\n\
            \U0001F4E5入力（この節を作るための材料）\n<SECTION_TITLE>             # 例：第6章 API/外部IF\
            \ 基本設計 → 6.3 注文API\n<SECTION_SCOPE>             # 本節の範囲/目的/前提・制約（箇条書きOK）\n\
            <USER_REQ_SNIPPETS>         # 関連する要件定義（REQ/NFR ID、抜粋）\n<CODE_KB_SNIPPETS>\
            \          # 関連するコード抜粋（repo/path:lines, commit, updated）\n<SPECS_KB_SNIPPETS>\
            \         # 関連スペック（doc_id/章/項/頁）\n[<CONSTRAINTS>]             # 法規/セキュリティ/納期/予算/互換/越境\
            \ 等\n[NFR_PREFERENCES]           # 非機能優先度（例：可用性>性能>監査）\n[STYLE_HINTS]\
            \               # 社内テンプレ/書式ルール（表項目、用語統一 等）\n[OUTPUT_DEPTH]           \
            \   # 標準|詳細|要約（既定=標準）\n\n\U0001F50E作業手順（この順で実行）\n整合確認：<SECTION_TITLE>と<SECTION_SCOPE>を基準に、要件/コード/スペックの齟齬・重複・欠落を検出（結果は本文末「整合チェック」へ）。\n\
            一節の骨格定義：日本式の章節構成に合わせて、本節の小見出しを先に提示（最大3階層、簡潔）。\n本文作成：小見出しごとに記述。必ず仕様値→理由→根拠の順に述べ、表は日本語見出し・ID付番。\n\
            受入観点の付帯：本節が担う**受入基準（合格基準×検証方法×観測点）**を表で明記し、対象REQ/NFRにトレース。\nリスク・未決事項：本節固有のリスク/品質臭/決裁待ち事項を表で整理（期限/責任者付）。\n\
            根拠脚注：本文の主張ごとに**〔REQ-### / repo:path:Lx-Ly@commit / DOC-xxx §y.z p.n〕**を脚注列挙。\n\
            \U0001F4E4出力フォーマット（この節の本文のみ）\n<SECTION_TITLE>\n\n1. 目的と範囲\n  - 本節の目的／対象／非対象／前提・制約（要点）\n\
            \  - 関連要件：REQ/NFR の列挙（簡記）\n\n2. 設計方針（この節に固有）\n  - 選定理由／代替案の検討要約〔根拠〕\n\
            \  - NFRとの整合（測定式・閾値・計測点・責任境界の関与）\n\n3. 詳細設計\n  3.1 <小見出しA>\n     - 仕様（定量値/テーブル/フロー）\n\
            \     - 例外/エラー/タイムアウト/冪等 等\n     - 運用・監視ポイント（ログ/メトリクス/アラート）\n     - 〔根拠タグ〕\n\
            \  3.2 <小見出しB>\n     - （同上）\n\n4. 受入観点（本節分）\n  - 表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点/データソース｜対応REQ/NFR\n\
            \n5. リスク・未決事項\n  - 表：ID｜内容｜確率/影響｜緩和策｜トリガー/期限｜責任者｜〔根拠〕\n\n6. 整合チェック（要約）\n\
            \  - 要件⇄本節、コード⇄本節、スペック⇄本節の差分/齟齬（改善提案付き）\n\n《根拠脚注》\n- REQ/NFR: …\n- Code:\
            \ repo/path:Lx-Ly@commit（updated: yyyy-mm-dd）\n- Spec: DOC-xxx §y.z p.n\n\
            \n✅品質ゲート（自動チェックして章末に結果を記載）\n根拠完全性：主要主張にREQ/Code/Specのいずれか根拠が必ず付与されている\n\
            NFR整合：関与するNFRは式・閾値・計測点・責任境界を本文で参照\n受入網羅：本節の機能/非機能に合格基準×検証方法×観測点が紐づく\n\
            曖昧語排除：「迅速/柔軟/十分に」→定量値へ置換\n互換/移行：破壊的変更の有無・移行/ロールバック観点が記述済み\n\n\U0001F9EA\
            クイックサンプル（入力例 → この節のみを出力）\n<SECTION_TITLE>6.3 注文API</SECTION_TITLE>\n<SECTION_SCOPE>新規注文の登録/重複防止/結果通知。非対象：決済事業者内訳の可視化。</SECTION_SCOPE>\n\
            <USER_REQ_SNIPPETS>\n- REQ-012: 注文登録はp95<=300ms、冪等、二重登録不可\n- NFR-004:\
            \ 稼働率99.9%、RPO<=5m、RTO<=30m\n</USER_REQ_SNIPPETS>\n<CODE_KB_SNIPPETS>\n\
            - services/order/controller.ts L22-67@a1b2c3: POST /v1/orders // TODO\
            \ auth\n- infra/k8s/order.yaml L10-24: readinessProbe, resources.limits\n\
            </CODE_KB_SNIPPETS>\n<SPECS_KB_SNIPPETS>\n- DOC-API §5.1 p.12: /v1/orders\
            \ POST 認証必須、非推奨化v2方針\n- DOC-SLA §2 p.3: p95<=300ms, 99.9%\n</SPECS_KB_SNIPPETS>\n\
            <NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n"
        selected: false
        title: LLM生成基本設計1
        type: llm
        variables: []
        vision:
          configs:
            detail: high
            variable_selector:
            - '1728217105363'
            - item
          enabled: false
      height: 89
      id: '1728218323079'
      parentId: '1728217105363'
      position:
        x: 427.82204039715634
        y: 65
      positionAbsolute:
        x: 1565.3469025515153
        y: 291.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(item: object) -> dict:\n    return {\n        \"chapter\"\
          : item[\"chapter\"],\n        \"subtitle\": item[\"subtitle\"],\n      \
          \  \"title\": item[\"title\"],\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1728217105363'
        outputs:
          chapter:
            children: null
            type: string
          subtitle:
            children: null
            type: string
          title:
            children: null
            type: string
        selected: false
        title: 转object
        type: code
        variables:
        - value_selector:
          - '1728217105363'
          - item
          variable: item
      height: 53
      id: '1728218846720'
      parentId: '1728217105363'
      position:
        x: 130.46261275218922
        y: 65
      positionAbsolute:
        x: 1267.9874749065482
        y: 291.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(course: str, info: str) -> dict:\n    return {\n       \
          \ \"result\": {\n            \"info\": info,\n            \"course\": course,\n\
          \        },\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1728217105363'
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 整合
        type: code
        variables:
        - value_selector:
          - '1728218323079'
          - text
          variable: course
        - value_selector:
          - '1728217105363'
          - item
          variable: info
      height: 53
      id: '1728463823248'
      parentId: '1728217105363'
      position:
        x: 741.8919201860167
        y: 65
      positionAbsolute:
        x: 1879.4167823403757
        y: 291.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 190
        is_parallel: false
        iterator_selector:
        - '1728203511475'
        - result_2
        output_selector:
        - '1748675528999017486755289992'
        - result
        output_type: array[object]
        parallel_nums: 10
        selected: false
        start_node_id: 1748675528999start
        title: 迭代生成基本設計2
        type: iteration
        width: 1080
      height: 190
      id: '17486755289990'
      position:
        x: 1137.524862154359
        y: 453.9895339800137
      positionAbsolute:
        x: 1137.524862154359
        y: 453.9895339800137
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 1080
      zIndex: 1
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '17486755289990'
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt-4o-mini
          provider: langgenius/openai/openai
        prompt_template:
        - id: 42d3ce21-8fa0-4fe3-b28b-3c6807fe8575
          role: system
          text: "あなたは日本のSI案件で基本設計を作成する上級アーキテクト/BAです。\n以下の一節情報と根拠（要件・コード・スペック）を統合し、指定の節（章/節）だけの完成本文を作成してください。推測は必ず「仮説：」と明記し、根拠タグを脚注に必ず付与します。\n\
            \U0001F4E5入力（この節を作るための材料）\n<SECTION_TITLE>             # 例：第6章 API/外部IF\
            \ 基本設計 → 6.3 注文API\n<SECTION_SCOPE>             # 本節の範囲/目的/前提・制約（箇条書きOK）\n\
            <USER_REQ_SNIPPETS>         # 関連する要件定義（REQ/NFR ID、抜粋）\n<CODE_KB_SNIPPETS>\
            \          # 関連するコード抜粋（repo/path:lines, commit, updated）\n<SPECS_KB_SNIPPETS>\
            \         # 関連スペック（doc_id/章/項/頁）\n[<CONSTRAINTS>]             # 法規/セキュリティ/納期/予算/互換/越境\
            \ 等\n[NFR_PREFERENCES]           # 非機能優先度（例：可用性>性能>監査）\n[STYLE_HINTS]\
            \               # 社内テンプレ/書式ルール（表項目、用語統一 等）\n[OUTPUT_DEPTH]           \
            \   # 標準|詳細|要約（既定=標準）\n\n\U0001F50E作業手順（この順で実行）\n整合確認：<SECTION_TITLE>と<SECTION_SCOPE>を基準に、要件/コード/スペックの齟齬・重複・欠落を検出（結果は本文末「整合チェック」へ）。\n\
            一節の骨格定義：日本式の章節構成に合わせて、本節の小見出しを先に提示（最大3階層、簡潔）。\n本文作成：小見出しごとに記述。必ず仕様値→理由→根拠の順に述べ、表は日本語見出し・ID付番。\n\
            受入観点の付帯：本節が担う**受入基準（合格基準×検証方法×観測点）**を表で明記し、対象REQ/NFRにトレース。\nリスク・未決事項：本節固有のリスク/品質臭/決裁待ち事項を表で整理（期限/責任者付）。\n\
            根拠脚注：本文の主張ごとに**〔REQ-### / repo:path:Lx-Ly@commit / DOC-xxx §y.z p.n〕**を脚注列挙。\n\
            \U0001F4E4出力フォーマット（この節の本文のみ）\n<SECTION_TITLE>\n\n1. 目的と範囲\n  - 本節の目的／対象／非対象／前提・制約（要点）\n\
            \  - 関連要件：REQ/NFR の列挙（簡記）\n\n2. 設計方針（この節に固有）\n  - 選定理由／代替案の検討要約〔根拠〕\n\
            \  - NFRとの整合（測定式・閾値・計測点・責任境界の関与）\n\n3. 詳細設計\n  3.1 <小見出しA>\n     - 仕様（定量値/テーブル/フロー）\n\
            \     - 例外/エラー/タイムアウト/冪等 等\n     - 運用・監視ポイント（ログ/メトリクス/アラート）\n     - 〔根拠タグ〕\n\
            \  3.2 <小見出しB>\n     - （同上）\n\n4. 受入観点（本節分）\n  - 表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点/データソース｜対応REQ/NFR\n\
            \n5. リスク・未決事項\n  - 表：ID｜内容｜確率/影響｜緩和策｜トリガー/期限｜責任者｜〔根拠〕\n\n6. 整合チェック（要約）\n\
            \  - 要件⇄本節、コード⇄本節、スペック⇄本節の差分/齟齬（改善提案付き）\n\n《根拠脚注》\n- REQ/NFR: …\n- Code:\
            \ repo/path:Lx-Ly@commit（updated: yyyy-mm-dd）\n- Spec: DOC-xxx §y.z p.n\n\
            \n✅品質ゲート（自動チェックして章末に結果を記載）\n根拠完全性：主要主張にREQ/Code/Specのいずれか根拠が必ず付与されている\n\
            NFR整合：関与するNFRは式・閾値・計測点・責任境界を本文で参照\n受入網羅：本節の機能/非機能に合格基準×検証方法×観測点が紐づく\n\
            曖昧語排除：「迅速/柔軟/十分に」→定量値へ置換\n互換/移行：破壊的変更の有無・移行/ロールバック観点が記述済み\n\n\U0001F9EA\
            クイックサンプル（入力例 → この節のみを出力）\n<SECTION_TITLE>6.3 注文API</SECTION_TITLE>\n<SECTION_SCOPE>新規注文の登録/重複防止/結果通知。非対象：決済事業者内訳の可視化。</SECTION_SCOPE>\n\
            <USER_REQ_SNIPPETS>\n- REQ-012: 注文登録はp95<=300ms、冪等、二重登録不可\n- NFR-004:\
            \ 稼働率99.9%、RPO<=5m、RTO<=30m\n</USER_REQ_SNIPPETS>\n<CODE_KB_SNIPPETS>\n\
            - services/order/controller.ts L22-67@a1b2c3: POST /v1/orders // TODO\
            \ auth\n- infra/k8s/order.yaml L10-24: readinessProbe, resources.limits\n\
            </CODE_KB_SNIPPETS>\n<SPECS_KB_SNIPPETS>\n- DOC-API §5.1 p.12: /v1/orders\
            \ POST 認証必須、非推奨化v2方針\n- DOC-SLA §2 p.3: p95<=300ms, 99.9%\n</SPECS_KB_SNIPPETS>\n\
            <NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n"
        selected: false
        title: LLM生生成基本設計2
        type: llm
        variables: []
        vision:
          configs:
            detail: high
            variable_selector:
            - '1728217105363'
            - item
          enabled: false
      height: 89
      id: '1748675528999017486755289990'
      parentId: '17486755289990'
      position:
        x: 430.46105621870174
        y: 65
      positionAbsolute:
        x: 1567.9859183730607
        y: 518.9895339800137
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(item: object) -> dict:\n    return {\n        \"chapter\"\
          : item[\"chapter\"],\n        \"subtitle\": item[\"subtitle\"],\n      \
          \  \"title\": item[\"title\"],\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486755289990'
        outputs:
          chapter:
            children: null
            type: string
          subtitle:
            children: null
            type: string
          title:
            children: null
            type: string
        selected: false
        title: 转OBJECT2
        type: code
        variables:
        - value_selector:
          - '17486755289990'
          - item
          variable: item
      height: 53
      id: '1748675528999017486755289991'
      parentId: '17486755289990'
      position:
        x: 130.46261275218922
        y: 65
      positionAbsolute:
        x: 1267.9874749065482
        y: 518.9895339800137
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(course: str, info: str) -> dict:\n    return {\n       \
          \ \"result\": {\n            \"info\": info,\n            \"course\": course,\n\
          \        },\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486755289990'
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 整合2
        type: code
        variables:
        - value_selector:
          - '1748675528999017486755289990'
          - text
          variable: course
        - value_selector:
          - '17486755289990'
          - item
          variable: info
      height: 53
      id: '1748675528999017486755289992'
      parentId: '17486755289990'
      position:
        x: 741.8919201860167
        y: 65
      positionAbsolute:
        x: 1879.4167823403757
        y: 518.9895339800137
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1748675528999start
      parentId: '17486755289990'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 1161.524862154359
        y: 521.9895339800137
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 190
        is_parallel: false
        iterator_selector:
        - '1728203511475'
        - result_3
        output_selector:
        - '1748683936289017486839362892'
        - result
        output_type: array[object]
        parallel_nums: 10
        selected: false
        start_node_id: 1748683936289start
        title: 迭代生成基本設計3
        type: iteration
        width: 1080
      height: 190
      id: '17486839362890'
      position:
        x: 1137.524862154359
        y: 744.9308958564084
      positionAbsolute:
        x: 1137.524862154359
        y: 744.9308958564084
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 1080
      zIndex: 1
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '17486839362890'
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt-4o-mini
          provider: langgenius/openai/openai
        prompt_template:
        - id: 42d3ce21-8fa0-4fe3-b28b-3c6807fe8575
          role: system
          text: "あなたは日本のSI案件で基本設計を作成する上級アーキテクト/BAです。\n以下の一節情報と根拠（要件・コード・スペック）を統合し、指定の節（章/節）だけの完成本文を作成してください。推測は必ず「仮説：」と明記し、根拠タグを脚注に必ず付与します。\n\
            \U0001F4E5入力（この節を作るための材料）\n<SECTION_TITLE>             # 例：第6章 API/外部IF\
            \ 基本設計 → 6.3 注文API\n<SECTION_SCOPE>             # 本節の範囲/目的/前提・制約（箇条書きOK）\n\
            <USER_REQ_SNIPPETS>         # 関連する要件定義（REQ/NFR ID、抜粋）\n<CODE_KB_SNIPPETS>\
            \          # 関連するコード抜粋（repo/path:lines, commit, updated）\n<SPECS_KB_SNIPPETS>\
            \         # 関連スペック（doc_id/章/項/頁）\n[<CONSTRAINTS>]             # 法規/セキュリティ/納期/予算/互換/越境\
            \ 等\n[NFR_PREFERENCES]           # 非機能優先度（例：可用性>性能>監査）\n[STYLE_HINTS]\
            \               # 社内テンプレ/書式ルール（表項目、用語統一 等）\n[OUTPUT_DEPTH]           \
            \   # 標準|詳細|要約（既定=標準）\n\n\U0001F50E作業手順（この順で実行）\n整合確認：<SECTION_TITLE>と<SECTION_SCOPE>を基準に、要件/コード/スペックの齟齬・重複・欠落を検出（結果は本文末「整合チェック」へ）。\n\
            一節の骨格定義：日本式の章節構成に合わせて、本節の小見出しを先に提示（最大3階層、簡潔）。\n本文作成：小見出しごとに記述。必ず仕様値→理由→根拠の順に述べ、表は日本語見出し・ID付番。\n\
            受入観点の付帯：本節が担う**受入基準（合格基準×検証方法×観測点）**を表で明記し、対象REQ/NFRにトレース。\nリスク・未決事項：本節固有のリスク/品質臭/決裁待ち事項を表で整理（期限/責任者付）。\n\
            根拠脚注：本文の主張ごとに**〔REQ-### / repo:path:Lx-Ly@commit / DOC-xxx §y.z p.n〕**を脚注列挙。\n\
            \U0001F4E4出力フォーマット（この節の本文のみ）\n<SECTION_TITLE>\n\n1. 目的と範囲\n  - 本節の目的／対象／非対象／前提・制約（要点）\n\
            \  - 関連要件：REQ/NFR の列挙（簡記）\n\n2. 設計方針（この節に固有）\n  - 選定理由／代替案の検討要約〔根拠〕\n\
            \  - NFRとの整合（測定式・閾値・計測点・責任境界の関与）\n\n3. 詳細設計\n  3.1 <小見出しA>\n     - 仕様（定量値/テーブル/フロー）\n\
            \     - 例外/エラー/タイムアウト/冪等 等\n     - 運用・監視ポイント（ログ/メトリクス/アラート）\n     - 〔根拠タグ〕\n\
            \  3.2 <小見出しB>\n     - （同上）\n\n4. 受入観点（本節分）\n  - 表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点/データソース｜対応REQ/NFR\n\
            \n5. リスク・未決事項\n  - 表：ID｜内容｜確率/影響｜緩和策｜トリガー/期限｜責任者｜〔根拠〕\n\n6. 整合チェック（要約）\n\
            \  - 要件⇄本節、コード⇄本節、スペック⇄本節の差分/齟齬（改善提案付き）\n\n《根拠脚注》\n- REQ/NFR: …\n- Code:\
            \ repo/path:Lx-Ly@commit（updated: yyyy-mm-dd）\n- Spec: DOC-xxx §y.z p.n\n\
            \n✅品質ゲート（自動チェックして章末に結果を記載）\n根拠完全性：主要主張にREQ/Code/Specのいずれか根拠が必ず付与されている\n\
            NFR整合：関与するNFRは式・閾値・計測点・責任境界を本文で参照\n受入網羅：本節の機能/非機能に合格基準×検証方法×観測点が紐づく\n\
            曖昧語排除：「迅速/柔軟/十分に」→定量値へ置換\n互換/移行：破壊的変更の有無・移行/ロールバック観点が記述済み\n\n\U0001F9EA\
            クイックサンプル（入力例 → この節のみを出力）\n<SECTION_TITLE>6.3 注文API</SECTION_TITLE>\n<SECTION_SCOPE>新規注文の登録/重複防止/結果通知。非対象：決済事業者内訳の可視化。</SECTION_SCOPE>\n\
            <USER_REQ_SNIPPETS>\n- REQ-012: 注文登録はp95<=300ms、冪等、二重登録不可\n- NFR-004:\
            \ 稼働率99.9%、RPO<=5m、RTO<=30m\n</USER_REQ_SNIPPETS>\n<CODE_KB_SNIPPETS>\n\
            - services/order/controller.ts L22-67@a1b2c3: POST /v1/orders // TODO\
            \ auth\n- infra/k8s/order.yaml L10-24: readinessProbe, resources.limits\n\
            </CODE_KB_SNIPPETS>\n<SPECS_KB_SNIPPETS>\n- DOC-API §5.1 p.12: /v1/orders\
            \ POST 認証必須、非推奨化v2方針\n- DOC-SLA §2 p.3: p95<=300ms, 99.9%\n</SPECS_KB_SNIPPETS>\n\
            <NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n"
        selected: false
        title: LLM生成基本設計3
        type: llm
        variables: []
        vision:
          configs:
            detail: high
            variable_selector:
            - '1728217105363'
            - item
          enabled: false
      height: 89
      id: '1748683936289017486839362890'
      parentId: '17486839362890'
      position:
        x: 427.82204039715634
        y: 65
      positionAbsolute:
        x: 1565.3469025515153
        y: 809.9308958564084
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(item: object) -> dict:\n    return {\n        \"chapter\"\
          : item[\"chapter\"],\n        \"subtitle\": item[\"subtitle\"],\n      \
          \  \"title\": item[\"title\"],\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486839362890'
        outputs:
          chapter:
            children: null
            type: string
          subtitle:
            children: null
            type: string
          title:
            children: null
            type: string
        selected: false
        title: 转OBJECT3
        type: code
        variables:
        - value_selector:
          - '17486839362890'
          - item
          variable: item
      height: 53
      id: '1748683936289017486839362891'
      parentId: '17486839362890'
      position:
        x: 130.46261275218922
        y: 65
      positionAbsolute:
        x: 1267.9874749065482
        y: 809.9308958564084
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(course: str, info: str) -> dict:\n    return {\n       \
          \ \"result\": {\n            \"info\": info,\n            \"course\": course,\n\
          \        },\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486839362890'
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 整合3
        type: code
        variables:
        - value_selector:
          - '1748683936289017486839362890'
          - text
          variable: course
        - value_selector:
          - '17486839362890'
          - item
          variable: info
      height: 53
      id: '1748683936289017486839362892'
      parentId: '17486839362890'
      position:
        x: 740.3762036195067
        y: 65
      positionAbsolute:
        x: 1877.9010657738656
        y: 809.9308958564084
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1748683936289start
      parentId: '17486839362890'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 1161.524862154359
        y: 812.9308958564084
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 190
        is_parallel: false
        iterator_selector:
        - '1728203511475'
        - result_4
        output_selector:
        - '1748683950504017486839505052'
        - result
        output_type: array[object]
        parallel_nums: 10
        selected: false
        start_node_id: 1748683950504start
        title: 迭代生成基本設計4
        type: iteration
        width: 1080
      height: 190
      id: '17486839505040'
      position:
        x: 1124.1371764102519
        y: 1045.2641105297362
      positionAbsolute:
        x: 1124.1371764102519
        y: 1045.2641105297362
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 1080
      zIndex: 1
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '17486839505040'
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gpt-4o-mini
          provider: langgenius/openai/openai
        prompt_template:
        - id: 42d3ce21-8fa0-4fe3-b28b-3c6807fe8575
          role: system
          text: "あなたは日本のSI案件で基本設計を作成する上級アーキテクト/BAです。\n以下の一節情報と根拠（要件・コード・スペック）を統合し、指定の節（章/節）だけの完成本文を作成してください。推測は必ず「仮説：」と明記し、根拠タグを脚注に必ず付与します。\n\
            \U0001F4E5入力（この節を作るための材料）\n<SECTION_TITLE>             # 例：第6章 API/外部IF\
            \ 基本設計 → 6.3 注文API\n<SECTION_SCOPE>             # 本節の範囲/目的/前提・制約（箇条書きOK）\n\
            <USER_REQ_SNIPPETS>         # 関連する要件定義（REQ/NFR ID、抜粋）\n<CODE_KB_SNIPPETS>\
            \          # 関連するコード抜粋（repo/path:lines, commit, updated）\n<SPECS_KB_SNIPPETS>\
            \         # 関連スペック（doc_id/章/項/頁）\n[<CONSTRAINTS>]             # 法規/セキュリティ/納期/予算/互換/越境\
            \ 等\n[NFR_PREFERENCES]           # 非機能優先度（例：可用性>性能>監査）\n[STYLE_HINTS]\
            \               # 社内テンプレ/書式ルール（表項目、用語統一 等）\n[OUTPUT_DEPTH]           \
            \   # 標準|詳細|要約（既定=標準）\n\n\U0001F50E作業手順（この順で実行）\n整合確認：<SECTION_TITLE>と<SECTION_SCOPE>を基準に、要件/コード/スペックの齟齬・重複・欠落を検出（結果は本文末「整合チェック」へ）。\n\
            一節の骨格定義：日本式の章節構成に合わせて、本節の小見出しを先に提示（最大3階層、簡潔）。\n本文作成：小見出しごとに記述。必ず仕様値→理由→根拠の順に述べ、表は日本語見出し・ID付番。\n\
            受入観点の付帯：本節が担う**受入基準（合格基準×検証方法×観測点）**を表で明記し、対象REQ/NFRにトレース。\nリスク・未決事項：本節固有のリスク/品質臭/決裁待ち事項を表で整理（期限/責任者付）。\n\
            根拠脚注：本文の主張ごとに**〔REQ-### / repo:path:Lx-Ly@commit / DOC-xxx §y.z p.n〕**を脚注列挙。\n\
            \U0001F4E4出力フォーマット（この節の本文のみ）\n<SECTION_TITLE>\n\n1. 目的と範囲\n  - 本節の目的／対象／非対象／前提・制約（要点）\n\
            \  - 関連要件：REQ/NFR の列挙（簡記）\n\n2. 設計方針（この節に固有）\n  - 選定理由／代替案の検討要約〔根拠〕\n\
            \  - NFRとの整合（測定式・閾値・計測点・責任境界の関与）\n\n3. 詳細設計\n  3.1 <小見出しA>\n     - 仕様（定量値/テーブル/フロー）\n\
            \     - 例外/エラー/タイムアウト/冪等 等\n     - 運用・監視ポイント（ログ/メトリクス/アラート）\n     - 〔根拠タグ〕\n\
            \  3.2 <小見出しB>\n     - （同上）\n\n4. 受入観点（本節分）\n  - 表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点/データソース｜対応REQ/NFR\n\
            \n5. リスク・未決事項\n  - 表：ID｜内容｜確率/影響｜緩和策｜トリガー/期限｜責任者｜〔根拠〕\n\n6. 整合チェック（要約）\n\
            \  - 要件⇄本節、コード⇄本節、スペック⇄本節の差分/齟齬（改善提案付き）\n\n《根拠脚注》\n- REQ/NFR: …\n- Code:\
            \ repo/path:Lx-Ly@commit（updated: yyyy-mm-dd）\n- Spec: DOC-xxx §y.z p.n\n\
            \n✅品質ゲート（自動チェックして章末に結果を記載）\n根拠完全性：主要主張にREQ/Code/Specのいずれか根拠が必ず付与されている\n\
            NFR整合：関与するNFRは式・閾値・計測点・責任境界を本文で参照\n受入網羅：本節の機能/非機能に合格基準×検証方法×観測点が紐づく\n\
            曖昧語排除：「迅速/柔軟/十分に」→定量値へ置換\n互換/移行：破壊的変更の有無・移行/ロールバック観点が記述済み\n\n\U0001F9EA\
            クイックサンプル（入力例 → この節のみを出力）\n<SECTION_TITLE>6.3 注文API</SECTION_TITLE>\n<SECTION_SCOPE>新規注文の登録/重複防止/結果通知。非対象：決済事業者内訳の可視化。</SECTION_SCOPE>\n\
            <USER_REQ_SNIPPETS>\n- REQ-012: 注文登録はp95<=300ms、冪等、二重登録不可\n- NFR-004:\
            \ 稼働率99.9%、RPO<=5m、RTO<=30m\n</USER_REQ_SNIPPETS>\n<CODE_KB_SNIPPETS>\n\
            - services/order/controller.ts L22-67@a1b2c3: POST /v1/orders // TODO\
            \ auth\n- infra/k8s/order.yaml L10-24: readinessProbe, resources.limits\n\
            </CODE_KB_SNIPPETS>\n<SPECS_KB_SNIPPETS>\n- DOC-API §5.1 p.12: /v1/orders\
            \ POST 認証必須、非推奨化v2方針\n- DOC-SLA §2 p.3: p95<=300ms, 99.9%\n</SPECS_KB_SNIPPETS>\n\
            <NFR_PREFERENCES>可用性>性能>監査</NFR_PREFERENCES>\n"
        selected: false
        title: LLM生成基本設計4
        type: llm
        variables: []
        vision:
          configs:
            detail: high
            variable_selector:
            - '1728217105363'
            - item
          enabled: false
      height: 89
      id: '1748683950504017486839505040'
      parentId: '17486839505040'
      position:
        x: 427.82204039715634
        y: 65
      positionAbsolute:
        x: 1551.9592168074082
        y: 1110.2641105297362
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(item: object) -> dict:\n    return {\n        \"chapter\"\
          : item[\"chapter\"],\n        \"subtitle\": item[\"subtitle\"],\n      \
          \  \"title\": item[\"title\"],\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486839505040'
        outputs:
          chapter:
            children: null
            type: string
          subtitle:
            children: null
            type: string
          title:
            children: null
            type: string
        selected: false
        title: 转OBJECT4
        type: code
        variables:
        - value_selector:
          - '17486839505040'
          - item
          variable: item
      height: 53
      id: '1748683950504017486839505051'
      parentId: '17486839505040'
      position:
        x: 130.46261275218922
        y: 65
      positionAbsolute:
        x: 1254.599789162441
        y: 1110.2641105297362
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(course: str, info: str) -> dict:\n    return {\n       \
          \ \"result\": {\n            \"info\": info,\n            \"course\": course,\n\
          \        },\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '17486839505040'
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 整合4
        type: code
        variables:
        - value_selector:
          - '1748683950504017486839505040'
          - text
          variable: course
        - value_selector:
          - '17486839505040'
          - item
          variable: info
      height: 53
      id: '1748683950504017486839505052'
      parentId: '17486839505040'
      position:
        x: 741.8919201860167
        y: 65
      positionAbsolute:
        x: 1866.0290965962686
        y: 1110.2641105297362
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1748683950504start
      parentId: '17486839505040'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 1148.1371764102519
        y: 1113.2641105297362
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        dataset_ids: []
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          top_k: 4
        query_variable_selector:
        - '1728198077941'
        - query_code
        retrieval_mode: multiple
        selected: false
        title: 知識取得-code
        type: knowledge-retrieval
      height: 53
      id: '1760835551600'
      position:
        x: -47.49118006054857
        y: 144.26808902541217
      positionAbsolute:
        x: -47.49118006054857
        y: 144.26808902541217
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1760835551600'
          - result
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: chatgpt-4o-latest
          provider: langgenius/openai/openai
        prompt_template:
        - id: 26983b96-e632-4fc3-b609-d923d3bef43d
          role: system
          text: "あなたは日本のSI案件で基本設計をまとめる上級アーキテクト/BAです。\n以下のコードKBのみを根拠に、矛盾・曖昧・欠落を検出しながら基本設計ドラフトを作成してください。推測は必ず「仮説：」と明記し、要確認事項に整理します。\n\
            \U0001F4E5入力\n<{{#context#}}>\n\n[任意パラメータ]\n<CONTEXT>[対象業務/システムの一言要約]\n\
            <CONSTRAINTS>[既知の制約（法規/納期/予算/互換/越境 等）]\n<NFR_PREFERENCES>[非機能の優先度 例：可用性>性能>監査]\n\
            <ID_PREFIX>[\"UI\",\"API\",\"DATA\",\"BATCH\",\"NFR\"]   # 付番プレフィックス\n\
            <OUTPUT_MODE>[標準|要約|差分]\n<DETECTION_LEVEL>[保守的|標準|厳格]\n\n\U0001F50E分析タスク（実施順）\n\
            構成把握：モノレポ/マルチレポ、主要サービス境界・層（presentation/app/domain/infra）、外部依存（同期/非同期）。\n\
            UI候補抽出：ルーティング/ページ/コンポーネント/フォームから画面一覧・遷移・入力制約・バリデーション・i18n/TZ/アクセシビリティの痕跡を抽出し\
            \ UI-### 化。\nAPI/IF再構成：ハンドラ/コントローラ/ルータ/スキーマ（DTO/OpenAPI/GraphQL/Proto）からメソッド/パス/版/入出力/認証認可/冪等/レート/エラー/互換を\
            \ API-### 化。\n業務フロー：シーケンス（同期/非同期）、状態遷移、例外・タイムアウト処理の実コード痕跡で再構成。\nデータ基本設計：エンティティ/主外鍵/整合性、履歴/監査、削除（論理/物理）・復旧、PII分類/保存/暗号/マスキング/越境を\
            \ DATA-### 化。\nバッチ/ジョブ：スケジューラ/ワーカー/パイプライン（再実行/部分再処理/遅延検知/失敗SOP/監視）を BATCH-###\
            \ 化。\n非機能（JIS X 25010）：可用/性能/信頼性/保守性/移植性/互換/ユーザビリティ/可観測性を測定式+閾値+計測点+責任境界付きで\
            \ NFR-### 化（ヘルス/リトライ/CB/メトリクス/トレース/ダッシュボード根拠）。\n運用/SRE：RPO/RTO/バックアップ、デプロイ（Rolling/Blue-Green/Canary）、ロールバック、変更/障害/インシデント/当番体制のコード痕跡抽出。\n\
            リスク・未決：品質臭（神クラス/N+1/握り潰し/秘密ハードコード/EoL依存等）→リスク化。仕様推定は仮説とし要確認質問に落とす。\nトレーサビリティ：repo/path:lines\
            \ → 基本設計ID → 受入基準 を連結。\n重要：すべての主張にコード根拠（repo/path:lines, commit, last_modified）を付与。不明は「未確認」。\n\
            \U0001F4E4出力（基本設計ドラフト｜Markdown）\n文書情報（版/作成日/作成者/レビュー/承認）\n目的・範囲・前提/制約\n\
            画面/UI設計〔表：UI-ID｜名称｜要旨｜入力/制約｜遷移先｜アクセシビリティ/i18n｜根拠〕\nAPI/IF設計〔表：API-ID｜目的｜メソッド/パス｜入出力（型/必須/例）｜認証/認可｜冪等/レート/Timeout｜エラー規約｜Version｜根拠〕\n\
            業務フロー（主要シーケンス/状態遷移/例外）\nデータ設計〔表：DATA-ID｜エンティティ｜主キー/整合｜PII｜保持｜暗号/マスク｜監査｜越境｜根拠〕\n\
            バッチ/ジョブ設計〔表：BATCH-ID｜目的｜周期/窓｜依存｜再処理｜監視｜根拠〕\n非機能（NFR-###）〔表：ID｜品質特性｜測定式｜閾値｜計測点/監視｜責任境界｜根拠｜優先度〕\n\
            運用・SRE（RPO/RTO/バックアップ/演習/変更・障害手順/当番/連絡系統）\n受入基準〔表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点｜根拠〕\n\
            重複・矛盾・曖昧表現一覧（改善提案付き）\nリスク登録簿〔RISK-ID｜内容｜確率/影響｜緩和策｜トリガー｜根拠〕\n未決事項/要確認質問〔Q-ID｜質問｜理由（根拠）｜責任者｜期限〕\n\
            トレーサビリティ表（repo/path:lines ↔ 基本設計ID ↔ 受入）\n併出：機械可読サマリー（JSON）\n{\n  \"ui\"\
            : [], \"apis\": [], \"data\": [], \"batch\": [], \"nfr\": [],\n  \"ops\"\
            : [], \"acceptance\": [], \"risks\": [], \"open_questions\": [],\n  \"\
            trace\": [{\"code_ref\":\"services/order/api/order.controller.ts:L22-L67@a1b2c3\"\
            ,\"design_id\":\"API-003\",\"accept\":[\"ACC-010\"]}]\n}\n\n✅品質チェック（章末に必ず記載）\n\
            根拠完全性（全項目に repo/path:lines, commit, updated）。\n測定可能性（全NFRが式・閾値・計測点・責任境界を持つ）。\n\
            API完全性（認証/冪等/レート/エラー/Versionの欠落検出）。\nPII/法令（分類/保存/第三者提供/越境/監査の不足）。\n受入網羅（各設計項目に合格基準×検証方法が紐付く）。\n\
            変更ホットスポット（頻繁変更領域の注意喚起）。\n\U0001F9EAミニ入力例\n<CODE_KB>\n- item: apps/web/src/pages/orders.tsx\n\
            \  kind: source\n  lang: tsx\n  excerpt: |\n    L10-36: route '/orders'\
            \ ...\n- item: services/order/src/controller.ts\n  kind: source\n  lang:\
            \ ts\n  excerpt: |\n    L22-67: POST /v1/orders  // TODO: auth\n  meta:\
            \ {repo: shop, branch: main, commit: a1b2c3, last_modified: 2025-09-01}\n\
            </CODE_KB>\n<OUTPUT_MODE>標準</OUTPUT_MODE>"
        selected: false
        title: LLM-コード分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1760835568047'
      position:
        x: 243.2358717978044
        y: 144.26808902541217
      positionAbsolute:
        x: 243.2358717978044
        y: 144.26808902541217
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - f7381d29-d338-4711-9caa-985604009c53
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: rerank-1
            provider: langgenius/voyage/voyage
          top_k: 4
        query_variable_selector:
        - '1728198077941'
        - query_spec
        retrieval_mode: multiple
        selected: false
        title: 知識取得-Spec
        type: knowledge-retrieval
      height: 91
      id: '1760835577519'
      position:
        x: -47.49118006054857
        y: 245.11672111984353
      positionAbsolute:
        x: -47.49118006054857
        y: 245.11672111984353
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1760835577519'
          - result
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: chatgpt-4o-latest
          provider: langgenius/openai/openai
        prompt_template:
        - id: bd27f1ae-f906-452a-8937-873b12475330
          role: system
          text: "あなたは日本のSI案件で基本設計をまとめる上級アーキテクト/BAです。\n以下のスペックKBだけを根拠に、矛盾・曖昧・欠落を検出しつつ、基本設計書ドラフトを作成してください。推測は必ず「仮説：」と明記し、要確認事項に整理します。\n\
            \U0001F4E5入力\n<{{#context#}}>\n\n[任意パラメータ]\n<CONTEXT>[対象業務/システムの一言要約]\n\
            <CONSTRAINTS>[既知の制約（法規/納期/予算/互換/データ越境 等）]\n<NFR_PREFERENCES>[非機能の優先度 例：可用性>性能>監査]\n\
            <ID_PREFIX>[\"UI\",\"API\",\"DATA\",\"BATCH\",\"NFR\"]  # 付番プレフィックス\n\
            <OUTPUT_MODE>[標準|要約|差分]\n<DETECTION_LEVEL>[保守的|標準|厳格]\n\n\U0001F50E分析タスク（実施順）\n\
            体系化：文書種別/版/発効日/適用環境を棚卸し。版ズレ・重複・矛盾の候補を列挙。\nスコープ/前提：対象/非対象、前提・制約を統合。曖昧語を定量に置換（しきい値・責任境界）。\n\
            画面/UI 基本設計：画面一覧・遷移・入力制約・バリデーション・アクセシビリティ（WCAG、i18n/TZ）を抽出しUI-###で整理。\n\
            API/IF 基本設計：メソッド/パス/版、入出力スキーマ、認証/認可、冪等、レート制限、エラー規約、バージョニングをAPI-###で整理。\n\
            業務フロー：代表ユースケースのアクティビティ/シーケンス/状態遷移（例外・タイムアウト含む）を再構成。\nデータ基本設計：概念/論理ER、主外鍵・整合性、履歴・監査、削除（論理/物理）・復旧、PII分類/保存/マスキング/越境をDATA-###で整理。\n\
            バッチ/ジョブ：スケジュール、依存、再実行/部分再処理、遅延・失敗SOP、監視をBATCH-###で整理。\n非機能（JIS X 25010）：可用/性能/信頼性/保守性/移植性/互換/ユーザビリティ/可観測性を測定式+閾値+計測点+責任境界でNFR-###化。\n\
            運用/SRE：RPO/RTO、バックアップ/演習、リリース/ロールバック、変更/障害/インシデント、当番体制/通信経路を抽出。\nリスク&未決：影響×確率、緩和策、決裁フロー、要確認質問（期限/責任者）を作成。\n\
            トレーサビリティ：doc/章/項/頁 → 基本設計項目ID → 受入基準 を連結。\n各主張に**スペック根拠（doc_id/章/項/頁）**を必ず付与。判断不能は「仮説：」。\n\
            \U0001F4E4出力（基本設計ドラフト｜Markdown）\n文書情報（版/作成日/作成者/レビュー/承認）\n目的・範囲・前提/制約（横断整合）\n\
            画面/UI設計（一覧・遷移・入力制約・アクセシビリティ）〔根拠付き表：UI-ID｜名称｜要旨｜入力/制約｜遷移先｜根拠〕\nAPI/IF設計（メソッド/パス/版/スキーマ/認可/冪等/レート/エラー/互換）〔表：API-ID｜目的｜Spec｜認証認可｜レート/Timeout｜エラー規約｜Version｜根拠〕\n\
            業務フロー（要点図解テキスト可：主要シーケンス/状態遷移/例外）\nデータ設計（概念/論理ER・PII・保持/マスキング/監査/越境）〔表：DATA-ID｜エンティティ｜主キー｜PII｜保持｜暗号/マスク｜監査｜越境｜根拠〕\n\
            バッチ/ジョブ設計〔表：BATCH-ID｜目的｜周期/窓｜依存｜再処理｜監視｜根拠〕\n非機能（NFR-###）〔表：ID｜品質特性｜測定式｜閾値｜計測点/監視｜責任境界｜根拠｜優先度〕\n\
            運用・SRE（RPO/RTO/バックアップ/演習/変更・障害手順/当番/連絡系統）\n受入基準（機能/非機能/データ/運用）〔表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点｜根拠〕\n\
            重複・矛盾・曖昧表現一覧（改善提案付き）\nリスク登録簿〔RISK-ID｜内容｜確率/影響｜緩和策｜トリガー｜根拠〕\n未決事項/要確認質問〔Q-ID｜質問｜理由（根拠）｜責任者｜期限〕\n\
            トレーサビリティ表（doc/章/項/頁 ↔ 基本設計ID ↔ 受入）\n併出：機械可読サマリー（JSON）\n{\n  \"ui\": [],\
            \ \"apis\": [], \"data\": [], \"batch\": [], \"nfr\": [],\n  \"ops\":\
            \ [], \"acceptance\": [], \"risks\": [], \"open_questions\": [],\n  \"\
            trace\": [{\"spec_ref\":\"DOC-PRD §4.3 p.12\",\"design_id\":\"API-003\"\
            ,\"accept\":[\"ACC-010\"]}]\n}\n\n✅品質チェック（章末に明記）\n根拠完全性（すべての項目に doc/章/項/頁）。\n\
            測定可能性（全NFRが式・閾値・計測点・責任境界を持つ）。\nAPI完全性（認証/冪等/レート/エラー/Versionの欠落検出）。\nPII/法令（分類/保持/第三者提供/越境/監査の不足）。\n\
            受入網羅（各設計項目に合格基準×検証方法が紐付く）。\n版整合（SLA/PRD等の発効日/版ズレ警告）。\n\U0001F9EAミニ入力例\n\
            <SPECS_KB>\n- doc_id: DOC-PRD v1.2 / §3 目標: p95<=300ms, CVR 8→12%\n- doc_id:\
            \ DOC-API v1.0 / §5 /v1/orders POST 認証必須・冪等\n- doc_id: DOC-SLA v1.0 /\
            \ 稼働率99.9%, RTO<=30m, RPO<=5m\n</SPECS_KB>\n<OUTPUT_MODE>標準</OUTPUT_MODE>"
        selected: false
        title: LLMースペック分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1760835580695'
      position:
        x: 243.2358717978044
        y: 245.11672111984353
      positionAbsolute:
        x: 243.2358717978044
        y: 245.11672111984353
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_array_file: false
        selected: false
        title: テキスト抽出ツール-要件定義
        type: document-extractor
        variable_selector:
        - '1728198077941'
        - file
      height: 91
      id: '1760835592663'
      position:
        x: -47.49118006054857
        y: 383.5720396156082
      positionAbsolute:
        x: -47.49118006054857
        y: 383.5720396156082
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: chatgpt-4o-latest
          provider: langgenius/openai/openai
        prompt_template:
        - id: 357e1fd2-5f31-4b4c-8e1a-43c6b1e5e7c6
          role: system
          text: "あなたは日本のSI案件で基本設計をまとめる上級アーキテクト/BAです。\n以下の要件定義ファイルのみを根拠に、矛盾・曖昧・欠落を検出しつつ、基本設計書ドラフトを作成してください。推測は必ず「仮説：」と明記し、要確認事項に整理します。\n\
            \U0001F4E5入力\n<{{#1760835592663.text#}}>\n\n[任意パラメータ]\n<CONTEXT>[プロジェクト/業務の一言要約]\n\
            <ID_PREFIX>[\"UI\",\"API\",\"DATA\",\"BATCH\",\"NFR\"]   # 設計IDの接頭辞\n\
            <NFR_PREFERENCES>[非機能の優先度 例：可用性>性能>監査]\n<OUTPUT_MODE>[標準|要約|差分]\n<DETECTION_LEVEL>[保守的|標準|厳格]\
            \           # 曖昧語/矛盾検出の強度\n\n\U0001F50E分析タスク（実施順）\n整合チェック：版/発効日/適用範囲/スコープ/前提・制約を棚卸し。相互矛盾・重複・曖昧語をマーキング。\n\
            機能→設計マッピング：各 REQ-### を UI-### / API-### / DATA-### / BATCH-### の設計単位へ分解（トリガー/前提/入力/出力/例外を明記）。\n\
            非機能の設計化（JIS X 25010）：各 NFR-### に対し 測定式・閾値・計測点・監視・責任境界を設計へ落とし込み（NFR設計ID付番）。\n\
            業務フロー再構成：ユースケース/状態遷移/例外・タイムアウトを基本設計粒度で記述（図解テキスト可）。\nデータ基本設計：概念/論理ERの初版、キー/整合、履歴/監査、PII分類・保持/マスキング/越境可否を整理。\n\
            API/IF基本設計：メソッド/パス/版、入出力スキーマ、認可、冪等・レート・エラー規約、互換ポリシーを明文化。\n運用・SRE要件の反映：RPO/RTO、バックアップ/演習、リリース/ロールバック、変更/障害/インシデント連携。\n\
            受入基準の紐付け：REQ/NFRごとに合格基準×検証方法（テスト/計測/監査）×観測点を定義。\nリスク/未決/差分：要件の曖昧/競合/欠落をリスクと未決事項に分離し、解決案・決裁フロー・期限を付す。\n\
            トレーサビリティ開始：要件(章/節/ID) → 設計ID → 受入基準 を連結。\n重要：各主張に**要件根拠（章/節/REQ/NFR ID）**を付与。不明点は「仮説：」。\n\
            \U0001F4E4出力（基本設計ドラフト｜Markdown）\n文書情報（版/作成日/作成者/レビュー/承認）\n目的・範囲・前提/制約（横断整合）\n\
            画面/UI設計〔表：UI-ID｜名称｜要旨｜入力/制約｜遷移先｜アクセシビリティ/i18n｜根拠(REQ)〕\nAPI/IF設計〔表：API-ID｜目的｜メソッド/パス｜入出力（型/必須/例）｜認証/認可｜冪等/レート/Timeout｜エラー規約｜Version｜根拠(REQ)〕\n\
            業務フロー（主要シーケンス/状態遷移/例外/タイムアウト）\nデータ設計〔表：DATA-ID｜エンティティ｜主キー/整合｜PII｜保持｜暗号/マスク｜監査｜越境｜根拠(REQ/NFR)〕\n\
            バッチ/ジョブ設計〔表：BATCH-ID｜目的｜周期/窓｜依存｜再処理｜監視｜根拠〕\n非機能（NFR-###）〔表：ID｜品質特性｜測定式｜閾値｜計測点/監視｜責任境界｜根拠(NFR)｜優先度〕\n\
            運用・SRE（RPO/RTO/バックアップ/演習/変更・障害手順/当番/連絡系統）\n受入基準〔表：対象ID｜合格基準｜検証方法（テスト/計測/監査）｜観測点｜根拠〕\n\
            重複・矛盾・曖昧表現一覧（改善提案付き）\nリスク登録簿〔RISK-ID｜内容｜確率/影響｜緩和策｜トリガー｜根拠〕\n未決事項/要確認質問〔Q-ID｜質問｜理由（根拠）｜責任者｜期限〕\n\
            トレーサビリティ表（要件章/節/ID ↔ 設計ID ↔ 受入）\n併出：機械可読サマリー（JSON）\n{\n  \"ui\": [], \"\
            apis\": [], \"data\": [], \"batch\": [], \"nfr\": [],\n  \"ops\": [],\
            \ \"acceptance\": [], \"risks\": [], \"open_questions\": [],\n  \"trace\"\
            : [{\"req_ref\":\"REQ-015 (§4.2)\",\"design_id\":\"API-003\",\"accept\"\
            :[\"ACC-010\"]}]\n}\n\n✅品質チェック（章末に必ず記載）\n根拠完全性：全項目に要件の章/節/ID参照。\n測定可能性：全NFRが「式・閾値・計測点・責任境界」を持つ。\n\
            API完全性：認証/冪等/レート/エラー/Versionの欠落検出。\nPII/法令：分類/保持/第三者提供/越境/監査の不足。\n受入網羅：各設計項目に合格基準×検証方法を紐付け。\n\
            矛盾/曖昧語：検出リストと修正案（代替表現・数値化）。\n\U0001F9EAミニ入力例\n<REQ_DOC>\n- REQ-001 顧客検索の応答\
            \ p95<=300ms（§3.2）\n- REQ-004 顧客CSV取込（重複排除/検証/結果通知）\n- NFR-002 稼働率 99.9%、RPO<=5m、RTO<=30m\n\
            - 前提：個人情報は国内リージョン保管、越境禁止\n</REQ_DOC>\n<OUTPUT_MODE>標準</OUTPUT_MODE>"
        selected: false
        title: 要件定義分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1760835628719'
      position:
        x: 232.17508167976519
        y: 383.5720396156082
      positionAbsolute:
        x: 232.17508167976519
        y: 383.5720396156082
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 275.18932702660004
      y: 57.00811376222623
      zoom: 0.4520472720882235
